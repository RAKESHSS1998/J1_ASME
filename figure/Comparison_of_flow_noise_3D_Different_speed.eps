%!PS-Adobe-2.0
%%Creator: dvips(k) 2024.1 (TeX Live 2024)  Copyright 2024 Radical Eye Software
%%Title: dc6353c38cf4f529c944582d3ff45c4f.dvi
%%CreationDate: Wed Oct 30 08:07:06 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 2520 1368
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\rakes\AppData\Local\Temp\tmp4p0z72fo\tmp.ps
%+ C:\Users\rakes\.matplotlib\tex.cache\dc\63\dc6353c38cf4f529c944582d3ff45c4f.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.10.30:1337
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2024 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEB6892874B4D6B35F4BA2895
2DDF4C9B8200B32D7368EC950C963D1DE798F32708041E395A94A27CF34DA94C
B1F8A8AE4E95E3D9D23DBB28D017F1A5A232B2533A21F4FAF71C5CD8623B1DB3
75DEDBBC846759B3DDBACBD0BB9FE882315994E7704F25655F9332C1ACC7C130
53510645FF66168961B7D66288CF36C97474DF121FE8E9B9CDC1B4F27BDAD2A0
4EAFC90D9DEE76C678DB7E7DEAAC1AE5F0C5AA20C9489CF6BF32D2A3CAD6BD84
A5074B5832023E809B80408BB9B61C23FD31B10B777D6D0303D8672E44415545
1033CEE160F9FBE554BD27786B870B25727E7084BEA8B53016FD85CF9289DF78
EE12F3DEB4E33DCD967D167E99036FF3B1B8EA0380FFD69361F81BAF8D677E07
6CEC52D4E5526B66BC38B0CC9669D8D3BCEAEC9258D51D73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A10335A0A09DDE121A580DC892423613708F967186
E210792D9EA463C2FB76BC889370A04D8682D0AE03DE6338AA0D62613C595D1E
9AA52AAD14BB8222997715DC16BB65D88A7AAD93961976DE90E40187EA775CC4
040046CF004AF4D76C8434E66ADB72B6710A1830B017A9711B886A186DB61E3F
985EEFDAD748E35BA0325B03468042550ED9739076EB30477D455C7DF2258C28
036A4B32B3491B7D4E0731012EF40527BF0AA0FBCFC9A2833660300628954409
1C3074E04673F0EF8B894110FCC770E127C526F1BC74B8294CC06FD8B590728C
D790989027AB9043E20F807BC9C2A57259E74D6DB20FD6F05AAA14D659527745
31A01D08AF8F62874DE9FFBD9C7300D3C2260F9633816ACF8132B8CB3FBE5D03
9C24DD75C7A4F038C15E7007939680912BE6F4727392706083F71F65226003CB
9EC18D503C34B6D031F7AE1F58AE1F5CC02281429B33760498C875E808F05BD9
039DFAE90751B085BDF6F5AA9A634B5BDA458E4F3E17638B00884A463DC008F0
470EFFD7D7B805231450985FE13F6F382BED2C0333FCCDE9366DDBA66334B972
95BFA4099D149EE93FBCC6272AF549BDC5C3CC23E1FD81849C040C7EE7BEFF04
E2E8606318816EFAA8E50F91A710D45BB0452D7895FED4BB91EE2A8B51C5A80C
5C7238AB883E083EA59959A3000F6558915E59246A382A2EF44013126E974503
0171081E540DE6141FECE531A950C0A07C88F66C2C6D8FDE6FEE1B6CD3542AA4
3722748EBAD8C81EE73B03FB45FA74E1A30B1E99309ABDC421B1B6ADD417F9E3
43129066B60DF044FDCB15FC368380FB7CF6EAF2AA24715FF25DF54CA84A035F
4C776BB4C86FA062F8EA9C0BE34CEC934F99C14E10FF15517C5CB80D692C3EA4
05779CDCAE96C243488EB42B699CE87B504090E27BDBFDB0DA6E692974E9DD55
ABC6F9ECC41930141116A4F26A9A4B055A3943E6C03D88A81CA6D598923590A3
899A367E9C05C282BD7D17FD6CF87AA8FF4359A3F1CB2632F340C4DE9E17A0AC
389FE104E141F00F84DCA5580945FEFDF28654505C7F7FB50EDDEE2C8FEEDC15
46675AE16824DD84B6CA375598B6C439A2E90BAE42BE0A650D81D9F7079793D6
FDBFDDDC1EA9AE9048C95AEEA4C65E463AC3961D2D195C1560E30A519C91052D
8F2271585D7BD902F471D99ED216F355139FE5B1C02DE323917F5A206046CDAB
D9D54EA413DE48450DFB26A3E003F3B3FBBF28863BD0C4165279A8F736599691
7E4A016C5B0D77A277EE5A0BA86B250C9A68A35020B390317A8F1B0971C84FBB
39F5FB23526A003729BA10324BA72B5820956B861A9735C2229ACD15B24F440A
40A69FAC2613E33319EA7DCFD8E886839A0D0B3FA0CA60A2E57AA31C1371F8C2
79D4D209102B0F7796B3FF181058A150426089EC7071143F5170878A4B02281A
34BBC6A4F370DE91AE957650FE5AFF7868819D52907413D171FC81DB91A0A789
EAE744D803926C343A87651B0F9FCEC27F5ED66F4591F19D573EB051F616E02E
21F171B38D2554D7D0774A2AA4173368D1C272AC65DB754E14D890F68526D864
CE8D7F8AEF58EC30481170E1B3E5D161A4B13C5693C3BC8392B8940C458A6757
C268C005A3ADB919976D4DBF8CC337B7023C305B957FFE68652B85CEFAA1EEBF
5C8195B1DC0DB6AE30654F8638918D5B677BBE7CB6558ABB29307BFEF201C53F
8B3FBA60A744C426C15A2DECCBF70DF0F6B084832576AC709534F4E828639086
00BB74AEAC0DB1C964459ED2ACD1FB24A64EDC496A7441E297A239F6DB762C63
3B2BE5BD24E2ED72605C996B7DF4908EAD71C474638B71F68CBBC9ED5CEAFEC8
9B4D41968B0C4AB19C72ACB183A82558C9244D08F196A1FF99CA74B2F4C88E7A
EE127E914C372C6E2DD84989E78792EC3F55331548A348C48D19182D79249080
AD244A961CCBDEEB2B1674DD4546756FF8D79D108816E9072BCDD886F08E74F7
24DB01EC7E67FC33903B7DDA3697D159B5DB520A27D96B1E7FD78689111BFA6B
2D1015854A43B3CD12C56C7856D4B0ECD4E415CC9290C79FE24F1D260275F485
F8A27B76856919419613973269D39C75D085544C9A64BAE28239DA8BEB1A6A96
E95B783B1FF154203496AAD69A05A3349349C965D9025A5318E6C9D076E6389B
8F7471FC666CB194CF4D162729D742DE146036351104954ABB269B117E393AC5
E328654BCFA54DA33831938E9392DEF7594DE827864CD1D0B7FB3907739D7EC6
A3BD1B16ED4B0620CD94F6A13F13BA97269BF4593E30CF027EF28C6B0553B633
80AB3A68098EA2EB484D0FF08E196EFC5F2CE715B765EEB5207895D8AAE70819
6E122DAA1E98C127199A84F067F33213ECF7D1A49BE7AD6D6BAACE6C3E98644B
EC870B501018824C0E0CFD58F97A957FF98D5BDA3E3E0963BC0889BCF9798C25
53547A61E792FFF1871D175A7DD93EF7A0442BCC703B3D6E17814DE77454DC15
2B2CD12041A9F886F6A759B58BC29DEA9B9BF08BBD7316407DB667534F267E97
13229F7B3A3054B8C7E2CD0483B67A15A01C8DAA5F5DCA2A596671354A739F6D
DBB748D032DE92149840083DA532A70F6A9A242561B587EBD523471911715F16
FD79F34C5A27A213ACE6B195674328FF4EB9E2AB773D24F84D3597ACEB63E711
90FACD33B8DD061AB0249B50791A55DCCC94F718D801B406EC6F95EE8E5A0F5B
56746711DB8A35BA5C0CDA1B9F0FBC9D0387353E93EA97B8302F34FCDAE7BA92
1849FE8E65EAD85C9445AE061A93EC67A078EF26AEDCEC4BF7B33C86BCF27163
0CB60AE1C3756297B8F218BB92C4536554BCB04D9FC30F3E53249F2A50C5F62A
C58C3F8E419DC3ACD44C831A58F2EAADBEC739FD624F6A9BAD13D61857519977
DD5BBD317B3402D11CD481B279B9DCE91B5AE82CBF821D0CA2394715CBF564DA
93472DE9CDCF42546F422F2272A77C7B24EA082C8B2671CEB212E0F42F6F95DE
7370CCF2E687548BF0022C97B939BF23B27B2DF046F314DBFE68DDB61B2D4B96
EBEB110DEBD28BCCD7B42E245579D29D18D7BCEC088C0DDD5C6C2F44BF832E4D
54880BAF264A4431884E8BD834A1E8AB45FFE334532FFF6EE351252820E235FB
1497E97C252D233534F47521E168D225F364D6D6FAE9BA6357112336162FFCF2
F3B4CA7EEA93282C8ECF877589B206A1363B24D9F8E434FFEB507EA58F3C6BBA
54E11929F21078AB158F3D371257512495CD7323EFD97218971819C58624089F
E39F416FB3FC6812E3A132F5662F97BDC23F7979F802D54822CCEF7FBB56558D
69FB699E5EF78ECB6C3E02F2391C4FFAAD4334D0C76FC6E52A9C25F8091C4930
A63A3BDFF5CEE8FA00CCBCF7322BAE688DFD73F7115169B32AB8B6C05B273204
417BA5DEEFF27E8E687DAD0D563C70F88ABCACF34D3D4C33FC832602DC5027B4
CD2F093C653F72E434C6A84CC939AC2CA46B3CDB5C010AF9D3963C04EDD832CE
36C6A8C704DB8B1BCC5F0857344346C030A2C162DE1FA1F44B0075E2F2608258
70ED919BCCE11E945D3CEDDDA353E1830AB52E54E1718F7B559EBD43E9C644B9
89246C804CE808C1C0F3F3863F465ADA62540F38EEE066651BC340F29DAC3B59
51B557D62C7728D6E3F13BE05939C2A6F9F16673B2715D375CD401A944BC1D10
15FD6A95C3F462988FD59CDB721E0041BB3DDC31F80D52718A5534A786210197
523609F5265D108486A8D7E35077946A50EABD3881F89504703150AD9B8A1A7B
6101D72278FE081FA7A69652086C26A082C68D0BCD1E6E0C272C2A2AA763C063
72F1ABB8AB83DF7250E9D84CC1D3005CE0EA4D4F1B878734B619EAB333606866
830AAF90F2A0E1920CA9D56302BD0EF73B710906677AB294DAB3E78069B62F88
F28FA8E91C185E7F1FB35C3BE9F6090D5DFAE177B8DB3E6781458685108FED42
F6736BD633979FC177BF35A0C7CE8B2961668F7F6E96C8E7829242F1E05AA1A3
BA678F41052542332A7EDDE9B4255C64F958E25C3CE462A08519B8A3AE175EA8
7DD3836D107EB68692BCFB1B6E4F4BBED8DDF2CC28B70C3A760F4A0556FE49D2
299B3B24B22853BACC317278E858E4B3E9AD496B7C1CBD7F8E0DC04489EA9618
9A67FC4E09BE412785550A6B57D988DF43841531AABDE1150A8BCDAA1865544E
E094F406EF7DCECF9D904D5D100DF71184DFFDC78FAEAB0975329109C6A52C4D
512B80752200BAA2249B648DCBEFF137E476FE5A098E909C1FD801ED495D1245
4110FB8912B2DD3CD85C0CD361709517AFE40224B897BA6CD6DB3BEC3AD3AF85
AB2437D27AFAA023B97C36C591AB5883F64ED7A5102477B22146E4BA9B0C56C6
9E720FB561978B0E542BA914110E52B718525FA2775FF18416CC403A2175E7B3
EB6D040ACFEE696B8DBACC4BE043F586BF6669AD1977706855B09FE855AAAEF1
BF1EDDFC1A9B7E32F2B3020DA6AC819B13087B8314DA0B7D6B78937829489483
B17A7A8B3778B119B9E4FC87F7738111A3D433733813BCCDD66C09559D96D7B5
E3A88B93A8749A6D3AB2CD87F4DE73AB38A659BBE04761CB9AE2986D0A27CC11
86C39E7571360B85CCB42EA01EDF862D8267ED72388FFB5D7F73BF49A37E695A
7695FE9B0A14BD7856DC7DB84DEB6DA73092F21F04F718009DBA58BF46A92F35
A599C58E9CB8EAE9A2064A6CD3A2BD1F60148D9CA8743ACB24EF5B77E0CA5AC1
E6F13A8BA831CCF52A814806455B7277CA7044515630345FCD7D372A38C0F3B3
FFB1F9D7B7A870654695C6834B365C39F4F559316AAB818BB04DCB92F1AE54A8
CE885FD11125F49600C8019CD8B56CB7093F9D3375E6210F659B50970299514C
54607FEBDB52F0E3F5FE73B7D1E30D368C3AC576DD5A9DE04B77BC89FF0D605D
ACB74CF664D38090B4D02DC97E4FCEF493E676D7F74084F83E6FE0F152908B4D
4E8EBD5E43D8C3F9C8525C205A6B5B4FD0E1F3B75412A6FF9E3BA39A22E1914F
93588D2FFE51E034E3675A29247BC9CCF86B1DFF07EA0FD9AF3CB12A8855A04A
0C27A6EEA75B314D9F320809FEF5189391EACA749E76D2F9F84F98DB9D32B2F2
6F7FF1B76585F43B9D1C3DAB3E3D1F7E6480C873F386528D56A6FBE9F300A462
EB994D86BEF7A7AB9B62348D415E8BD8EDD3011935C3478B119295C7949061F1
368E8152D3C9283F68DA83F0920E8533D265E926C84FCD1EF6EAF34CB06B9DE4
9A5015F650D5DCC4BA7E74948431F8AD6D1B35763A60A6D1AA3A1C57DE129CFA
8B05A1E4A901284F589BCFEB7319942DBE0D1BC7AC4FCF1C07174122E4ADF5B4
E0A6A9A893F6281F1192BFFEDBE544A95183E9A00F23B8C9896F7B9F6A3A2FE7
FA1826E55A05FFD3D22406A6C9BAE33F19B5844003D33FB1DD2BEBDE86295D55
E47D190570DA97B9F109EC9C3A5E2700DD9ACE3E3FD94DBD7ABDBF4DA1EA5970
9B573C53C95E6175B17B50EA29130DAE42979EF09DEC7BC0D3ABA9303DFC9D2D
EDE086BE1471993976550136E056E5C458281D62DE936225222C972A570B027A
DD1C24093E23E7C8F49007CCE2C1B99B8FF826591B946C816B36E6AAB5AFF264
73C9C949A2D3F551491939BB052A6CF39E315C1F899A76E928894EB0769E13A6
EFA285BC4A036D73CCD7AC881EC4B739495E4D6B5FC5AE4059A7DB6F127CE1A6
BB506E49EA8C144C8F155319A849C360D33CF0386F6A524201D6B45D30DCD127
93DA116E847F8114534F6D36E4D585345FA7742C3BD35634D69BF59438BDC749
DEB0C35BE8BB5447719E11F0AAEAE8B1509566B13F5BCE56CA166355CE2FF024
9C7D48F16ED8F54ED3DE9532623246851C1FCAD88BD4B8D3D38E9FADFB52D428
AE7DCBB2B80EC88FC79996FB8A9D00469C314BAE01476EE4FC6A7455F09D4103
49DA52B9F5D924B4A1354303F517EB4AD9BE6DB41711D9FF6474FFC4E3F8C8ED
B574B979F2AAB769D71A2CBCF7FE1A36DE0A3D8455D835280DB6EE90F531F572
7126F236C790583B9CF9F929C0FF50BA7D6D0E964143A0906762197B88E7E196
54E76C73BFC3C79DD8311101317A71126DA51FC9C8822C836EC1E6C6901D8EC2
47701DB2DF7D29FD8EDFF9DD1A97A2841500B51C672DDD9181CFAC6D5546FA3C
39C03711927D4E8BCF6DC82DF9608B80D8E86E8DD683C7280C98EABA19973BB5
96EEB41C7FAAB530481B4DD83CA2B4C4C59B2FCEB1291C549BC9ABD6241D2D9C
19F22078C426F710560A9BB88DBD9146F1A6FE3EAEDC5E2710FFDB86488691EF
21286FD1A9802FA5D28E4EB934E6D146ED886E3FDD7941DF7169A27839704C3D
384379D341CD78859EC054492B85AC913DEF532D63CF044F38542BBC50267B72
65C347165E8287E051FC6D101DC564467207D893580508A0D9B5299035A87E14
2CD459C131BDDE4595495A365FCA347B343F733BD91A4F7F22663C2EFE1FE92E
F53631FD31AE085F57948854365B8A2C7F4BAADCD13FAD59FC301C0EBD7B20F4
6BD3A37D22F32F6549494FDC36CE48C99472CC44FBE5FB796266DE6FF0156E15
3692065BEC2C42DD5FFE6E933EFBECF229D779853631D900C6C4BE5E61B0067A
27B151B4804591D4C0CA18A6992A096FB43D7BDB461FE9535A696F0279DBF9BC
48839144C4372AD7DB3B5F827C86FAA4CE2CA47AC060FB482BD668F8176D41B4
1AD6FB1F11D7C48435ED169FDF33C85E8A32206AEFC8BF4731A9835C5445E623
BC13E850BA12A4C84D77011FA5E2E49D733FEF47E645925A217B062A189B70A3
8D6111C701A68CD24E0235628AFB8F0BD10564EC5B1A5E9352AB44C7C791ABCE
A73D6919224BF51956B9688E95E0EE1460128E93D9625A81C3836E0BF5A595B1
806680DF77492BB025B9FAD7B75682A324A03A595674E7E34C06E4D0EFBDF346
148A60B00B081A82ECEC6F15E7F3F48B41232E684284251E436EF57BFEFA0FBA
554313985703C6018E7285C9712F0488AC55E8E3E75F05033B7B7A18ED6876C0
1A5D575870DEEC20486ADCE105A4C13F6735BE26AED8D9B23D3E4923B9848C9B
F2126C4ACF9EA61F3E1B499563E06CA6CB08F1E7401489AD6E8101B91036A26C
85F2AF47DA3CE8D6655BAB5573E4A2C49A882C0CDE37FA0EA881B42CA3AF403F
6E3B953367A6EE51F3D6390A4581052B65158B15535B0D8132CCA0AF6111D296
2D933FE41515AEF16DDB2BBFCB7462632EB4DEC17042F2573655D4AA05C10044
2F5D96014D047F4BD28107549274C1929A48E3FDE391ECD06CA3E4D0D6CC2B1A
A03D5A6BD84F4FD9143F23C4069F7AD81133423E918B0739CBEFB184F8A92781
EADECFC1F63A193D081D3B7D912566E70CE0AFB04F1F58A4A7BB16D120367E1A
7C6432B2008A84BB3C6A5C18FA8E3D056EF2748DC867645A52760144F1DA5AF6
3ECC4A7968A377F274BC5D7615A0F4310A4C41704907D27F08D3ACF07D65CF67
F6A55A53F662CC28CD36738CE2E2C3DAF43C86C4291E60DC73C8A04D59E7A06C
58C5F01079E5CA265FC20C5927E81268385BEAE9EF8D735BFB4715B7E2454D0F
598F0BF61BA35CB2FDE1D47E802F698295CA192DC07A0C86CDFBC19F89BDF257
6DB779DA5061B3B8A57B5C4601CF5235CF67B5DB6EF7DEB69C7F6DC3E9A1C88D
0A56692BDA203BA8715397AE110C1A1366F457F213479FA0C19834C5B30D0515
DC31DAB39E74CF8481E03C7169646106C237B9F0C444172353C796B72713FF47
97CF0A0355E8FDE44970F0BD0A5F01FBF4DC58976B50F345BFBC7C8D38864C55
AA8AEFB8884C23494561A7DB7E318DFFBEC119D379A248A5A9D224595579975A
1537801BE3C588161EA38AA7A03D2FBA5F08E67DAF3294A173E4B6F3271396CB
9B90CE73A3467090058FD31159CBDCAF4903835F153170BAD72480247EE13CC0
2BA60411FB243E4876AD9015F71AC4F78C20D80F5BE8A868CE440493662D1373
36A6CAECDB5D61979894557929B298B8C4E12D9F9E97E5DBAA2871665E9B2C0C
88320BA0B788D157388E7C54C8C90CEEE5A3E69465E58CF73CF3BC8EB65D68EB
74D57CA505622F3B0040726B1EC0FEC3DED1303B2561A4D010A395A1BFC7A242
3D1E19F32E5BFB1AD30FD0099419E94B1EAAB833E4E31084024D0E7342EF25E0
3AA1D0FAB54AA5821C4CB010AE179F634496284A1C980FE488F8D49D3A4BB2B2
7C838A1EE984015F08CF746F0635F4D60C3D5A5DDA15ABA84B4508BE3FB1677F
AD61C52AE28BBBAD5C077185DA86C853397D49723CB3509F291004BF150308DE
D55F3D51EA97EEFE0EA0140545252B0FCF6110C414D4894876F46A2A4BACF343
B716761A934A676E58921BDD9CC7AF9CED4243271DAD172A41BFF55A6C5E200B
E98687088A10E26B0A367C598BA53936358D0199ED919E55257DFFED50501CA9
B75142A4F86E2765E95A595F5D867DC59BB726C56CB4F126EC70B39B88829C7E
1A8A6F237782E3B2AE143EE0F2E86242FB263EBF44284A55F1F18DD564140AAB
4C94655F82DBC5AABDCEDA355F4FDF68F35F948298BD9F335EAD23A28BD73EB5
57DF134CA24FD489CE73F6237FAD0E908C48A1B801960137FF1BABDF159D0EE1
6A99885DAE49566EDF37EE3889D316A51C51B31574B2FA8A71BA89DC8F6F167C
7C03335A32BB63BF85BFE4DCF0C8E75BA8EA33617F1E8ACCB703D9F46A81723B
B6B76B4C3C2E2E5B8584AD015374BE3AE64D27F61B3EB6BBFC5B319FB61C7E8F
AF394569E044B9E4CAECA175260290D8B0FBA6DE7DDD436420D7241D75F2AA31
FB2A32A4C0367F3CDAADB9A370228BDD72D2B90A00D19CB9FBD855ABBC9553CC
600A72701A3C821EB081B14581C6E968DAAAB2896FCFB745795C4D2C812D74C1
03AF60D5E05063DE4A025FA5007DB8F3314CF5742012077C473AEFAB9D2A0AB1
8FCF5A40C9286D069EDCAE2A7BE20836593420A0A13033DF9CF8D9A3E6F22741
3BBE9189E6DE0BEC9F0D07A47A715C1C33C5C56666D812A3C091A04B5E38B507
09CA21A207D8D609336543A581C49DD4B88BC6F4D49FBFEEAB3F2E9FE6A9BCF8
269C7AF350E769A7EB0E1B9BF5CD44BE1164638B6D95233DCAA6A0FEE2D6B4C7
A6EB8752AD991B35114172F41D373B212AC35D42045E5CEEBD10F60E863B5330
E6FD9BA5490AB3086FA89CFE93B3C63732E9D2B0198ADCADBF16D5AA2CA014EA
ED3124C501882B3D65611110CF0CCF10815857A157655EF7D3E6071EEA62C7C5
0EB950C284946E38EEEF7E47DC26F8B6F0422F3340A01614CCC41D40D27BF5C8
3731432F5D4CBC310CCC04B69F50626EABAAE93F56598F1F390A0F59258E4C76
8AC0134A614BFB94C297FA91E6C46E47A7C65EB3AF97E72594C518A003403894
6B609F0E9D7A0546E34F8BF633F656FE32F1FF45323261786759596C63BCB936
321589906AB24214F3C046A1F5BBA4454B6CD9DC64DE1112D9A7F5B61F8CD458
C787BA157D6ACD83D472CAAE764842F3B4E65999F261955E4524C8D734A287BC
52FA90B551817128AC48A4BC9A1CFC4EB037A69B9EB54A68FDED4456122D483A
E830BE0C14925C37EABD8B2A042FABFF483882103582209E9DB2598A20DF4AD9
0CAAF7A0B94495594710F7BB631D9C72CF8C2EE96D8A5737F03BCE6C4646734B
007435751050B746A0000DD5DAFFE353929EE3344130879F2032497586887A30
FBFA5C6A212208CDE16329A1A9FD6FEAD0C56ABB13BA1995D384491B65E4B683
AE7362FBDFCFD3062E20E8BF13006D94F551E1481E93C685F28A5DD815BFC5CC
B48C3873FC30C10D4102CA922C49DE845F2F7E22BEA3E005C30C5885E1A31D60
63225001812697DA4489C37568ED4CF408AD2EAB740238B673A415EA78F67527
45EA1E808C88657D37C518191479EE0D41261B2DC3ECCDD53BEE3AFAF706FE41
75141E9B118E7AC07B6270FBE652816AD930A260C8CDE49E15DCFC537A77D96D
A272B80051D7BB38997DEE1489CB80D760D4C31FFD8E78EE56E61E7D57DE4EAE
8C99EDE56D55527870EAA424AC47170D4F7A2A4A5BC0EBC5AA838B51B2041FE9
242F105A7C9CFE4789D94A107C3EB8B31D2A73BB24839108E3E7FA86B8991A16
B47689DD9B755C2AAEBFDFE3ACDC88B392850CF64172584B5541B68FC57C8488
395170E5F0C9EAD4E1289E579C51AA3FDF6C9DB5FEF66709E47B039EE02FA983
070D2744C57651C356F194B6E324D05ABE738C5C8BDE89D86AE54340EA18BB06
03FB935AE1BAC8E1E8C8FB407065F6AC5CBB27457FB4CAE1610BC63C7015E28A
B3BBC29C41A2F6137C9121C66A61AB6C8A6BBEE2055CAED7D3496685A237FDDA
4100E4C99C6F8B6ABFA670CF15FB1182E6AA85DC3A5AB0E636379E41B8021FA4
AA0C381260172811477B03B3CF648029E7ABE91A04B2B5DE49D42F6D6475A801
5A6380C17C443D3387B4813F5AE27AD4D481D48EFE540BE58759F04C160CA074
2BF5934815F4DB16D94E87F4C9D4D7DC96AB383CED5BC4309AE7DC5D05646146
39995B531AB73B7B80E7CB3536CF912EF09D114B18D24F48407ED498234A1567
31076EA358097CBA968C65A4B42C7D851226F6B8AF15DA2A64D0B87C9BC28F29
854DC3B30B7EE907A3D69ACFCA11BBCD0A721A2270DDF636E287680B333A01A1
8A7336D0BC22CB4A3EC182D5200E0D183A306983849D58F681B7DB2AF9B1B134
89E6C7F389F8397FD013623BE920DFE421E2A0CCEB2AFABFAA2C4B6AFC8E54F0
AD4FCC746D3F3CA9BA8CD5F9282E26EE124020EC5346612ABA2F98FB35D1784A
AFCEDA81B237C68351866180EC9A7F0C5448B445964DB721156CA2E670A51945
4840F2CAAF19798D2EDF8EA09A6EAC06281888319E487C6EFC7848C9F9A2A93D
3A1E9E1560CFB0C8DA23CDC937E20CAAF9362BB70A65F52369421CEECBBC5A63
EB33EB7600E15348657BEC3F4E6CBD626F3B6FCDE016ECCB97C0E9DC62769EE5
903725D53FF7B27F32FA0AA33829AF9112D8DE2BC673D46C959FE517699BC30E
B9228AC03BECD1382027A44362A10F1795E0D7C8FA130B9CB20AD0C1A682B60D
8B008665CCD9F0AAC3875E7151C6C6B3AA10D24135BAE820F51844AE3AB738A9
CE9DB9E502DB328ECDA5EC2BE2BB596BA18B44469CF05CF87566350D4A7D8AC9
CF72B479AEE3CC7B6952D4A7A5BDFE629EDD3CDB431990F7492BE5C140DB222F
6F220C42A7BF5FBF1E57F3B162DE9FC13B5D59B6C00A093748D9667E2743F815
822A941B58A321DF72E474B9337571BB2912C27B335AF38A29210890060E22DE
0AAE488E8DFED60AEF57F05D16DD6C9D704AEBC00BF2263C7C66C2AB86B85EB0
D953A1FBCC10A787A5AA51B79C039A1E20D2E4BC57A63FB90CFC48BAFAFE8242
6A1CD980025F0AFAB2498FE1D700EAFA6E08C989CAD08E643E7E1905C61BDC34
ACF888C510A787A5AA51B79C3AE7DCBC97D46F773ECD44221F2A546E0E6F6E8B
3BF1453663D01C1FFE63190D2C8A3658F5A0C423D79F05B3837F248D7484977A
A5F625D6D794BB577D9A4320D62547EA75383A9A13FBF8ABF9D7A474A1FF4333
51298FADBF3DD4B94515EB5BFDE929B1C3A34616C65DF0690B268ACA6C56F6CC
88E78CCE8568B44347312DB6F433F4E1D7320B8743EE1E6D2C6A892B7ED82FCE
3FD5D0AC36B35350A4E195F48A56451DE4BF7C149E5BC54336677E58386D7228
EE7AACE380F640BEBA17A0B807B96E9D8EF01D5BBE1E66CDAE488C13AA11355D
77D4DC66AF9B123CD321CC19CD8E63DE7044C8EDF9A11F36EF005402F64ADD04
351E619967BB68F035162028EBB50F50102E61A8B6E2C006DD6544A1996B9BED
9A4FB3AF52A77B08304AD7C43B7A022DA290131C687C4B7D10A12937EAC2F07C
3B45B1332F3502929450D92629B729AA3B7F1E6D1C3DC59FCF17783A0CECCE51
A2568E40A899D904DC8066974813AC9B6E45591543AB3B5E12FD3B814590B8B5
F30609D5C51FBD1F727890C47F0A3A56BCCA2C2339F14A013F97F30849B098DD
E1C8116A7FBB3E3E7EA3E113BC2E9ED29E4AAF92AF0AD4E6000014C982E86B2D
AC8F98F0571B0B6D0654E6B63737200ACFDF3D010636152E8C92B729F0F68CC6
A04607C2ADEBE97E903CB4A2D94E7E896C16C91E75F466BE4164BFA0D959C2A7
0998ECBACA596352025EE422CDDC122C61A947E1A8AA52C65705092E7228E499
E24E7E9894356F0AAA0BC8DA66B5ECC0C8D1984694DE7808717F220BC37C8A54
B583D87BD49E4D5FEA4E7ECF9947F48BBAA2E4E682E0A48B10BCD6CCF7F8D3C5
F1EDC8A77CF7B0D09F240864C82C47EC300A2323522240A3881706525C69960A
C419538ED9B96BB9FA728A9BF426AFDBAB473351ABD014CD38B9507C04D4E10F
A7463176EDF2320C93874D96539135B379A26FAFD56023EEDCF96383C591FC47
D729C72D53E0B5439C539B927185BC29D616D9CA01B23D71CD95FDA193E62A81
88A3C9C2476F82265BAAB7418F51B1369F573978AFDA870DA3A264E4F9D48E9F
392D3C80005C660B07E092C2DB156B19D3FA09466CF2D7B1386854C05CF83775
5AB8812405FE828C514951993BA54EE65A7F4D8F5C5A0906A7707196467DDDF7
797211885669CE0C6A51D2E8CB9088788D937DBA5131ACFDB29F1BE4A940C5AB
D90F65FB17CAB172F0A8DF7C51372AA752DF2B1069FDFB7362B16B4AAA9A1B29
8950B84F45AF5B704CE80E7C22B2D74905C149B69E422624B1CB3306C5A6A7F2
9213C5B9F7C2450B8BE72C62BB52AE20B7988D43A8F05F18FABD2DCAA7F3380D
195A666CA558DD7C4FBE327C4F35608EE58BADA01192DFC8C7683BB3D597C16B
87D87CD7795FD922546A08B4B30C530D3DB5691BC7603C3DA39BEC756093310A
F4C95A3826089B2B21507B1A94970751637C4A5A97860D9D16A88B0AE50AEF1C
74C4C7877EA2E3D84111C7DACDFF855A6094B19265BCAA4E1D44A5BB4BD16E99
804D3BF23B5983FC92F557C094D5C36C78D69C409AA4147D6E6B5046CA565253
7C12F0CE9C7BBDA6ACCE2EB1288C19690C9945A01B3B087FC8A275E54FFE76F8
F8C9375511185175CBB16BDC1E422BD76D73B31A090ABC8438774EEB5574615F
DBEB6F1B7A40CD5776573F3FA0E2BB1D3A28BB78B7806C7276632C97BE93D852
F33D6CBEE77CF13B4B7BFFBB1C842177C5F4A576842F3E29808F1AB76F3ED7CD
833790B1407A4D5130127DCBFD62CFF90240CD63E2E4CCA6763DCA77160E282A
D8A7C4327D7DDD21DB74C4DEFBB93983FD798E7DA254550DED3F4BB5F7C82A7E
BE5DCE90183592A266C3012340FC9A3C47CBF09BF5A009B105E294DAE7E17220
DC950B5185BD088824F980F6D1D90D20ABA9B6C9301E3AD61CAF041A93656FD9
F2342FE8FA325EFFF502807D2B6BC0FAE2DB4F5B3C8F6D6CA3D1299B39A4765A
B5032D1260E745B6D736B194EC70C4CD302ABB78C1B83AFF7C368309901225D8
F9274EDACF7C5CBAC62CB81000D8C95B398216EEA2116C52B5D1CCD21319BCEC
7407A24887A92F50FA3B13C9871CFA3E164497A254DFD58551AEEC8361243AA3
6FC97A39510DD08E2C33A3C1F42D1325C354AA5EAFA4677887A4B29D255B3E31
86607A21B0AA650AA1F15D0A8DFC0AAAA414BC8B37FBF4D6795161BE01EFC06B
63BD6F97C588FBF15032CF90C10F01610685B4B8708B56CCC813159D28D150A9
7FD1F107757047C6247B56D736A03B7D4416407B22A304F0A72AB8ED19C0E967
9F634737BBA7AA75DDF95102C7240E497F35098CD77C5A04BDD60DA02A2DB63E
D9CBECB166F90C9274638AB8467FF3BBC7DFB581E6F8A6A596313CF218025C25
24654EBEA7F75279E8324545CF391D0B377FE6B4F0BDEAF7F3C7A266DC32B508
BC0120C6564C94AE7D04DC76CCD0C89EB3079CD3DA24C7DABA9AD176F415215C
A018387E4210085C8304EFB4DF875766E66C0019ACD986DF03FCBE9BB6350F29
3CCEF90F966623A913BE45C790A91BCEDC86FB2499961C35F20952DE977CC76F
2598CDF2DF86EE32736DBBA20D1E50AD70236DD70D46A465D4170E26C3C717E0
A57802BEA091A2DCA938877FCC7E5692DDC5380297E6EE26325F7975A4F71FB5
916C4B305B66EC708E7865712F18E1B76E32906053545782775DA2E23C38D5DB
2519ABE0F9263B5D5D911F077A97BCBAE12A50759ABB203347E5B223AB3490D2
6723CC01B37133192C7175756484F62E5331E799886451F501FA340CB11389C3
0786395736DA4D2B13A1B41EB188CF33C86D9008E37533486841457199A4E06B
F51C88442DF2316A196FCBFB326CB4AC4A7B52CF19A0AA2F84F5C4667E79664D
10E7B1BE4DA7552368179FDBFF9C3BC2D15F8DC1167C5487C14FE3D9F4EA6263
E25D631D0B097082E735AAAF5C9B19990EEDE4BB800F8767E671301FF6D44254
DE085FF7B85AD46C58916F63471E5B79DD556E96B2602545C5641F967FA90BFA
1AEE6D497CFFA7F1BF8F402660EE078AF0269E338DB5CB3B19689CA3961A7212
9BA7C1A51C2DB8957C4C8051FEACE2526E8E6AA6404F2966780EBD5A998B0058
0DEABE299BEF985DF8AA0247A4A5F0E9735E626D8FE596A4DF5F1762444C485B
21E78D8C5C3E14E61978CE051714CDF1A18C95330B7B7EBFEB866C2D693A1B47
C4B09826141B1E6D18E261CFF19E555F237C08EC4FAACADD3AFD15
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: StandardSymL
%!PS-AdobeFont-1.0: StandardSymL 001.005
%%CreationDate: Thu Oct 21 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Standard Symbols L) readonly def
/FamilyName (Standard Symbols L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -229 def
/UnderlineThickness 46 def
end readonly def
/FontName /StandardSymL def
/PaintType 0 def
/WMode 0 def
/FontBBox {-180 -293 1090 1010} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 109 /mu put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA4706D91AF999C9244BA4C770
FE5B3485F083B758947E4EDACBB478E55F1EDA6FD43755F3819F9292072ADAED
FDA1ABB92842199CF874FD0D8A6429D69D5F1E8BB56FA51E0B0A12874786CC3B
1C24C9C608F40C7774946DE7D3EC6F234B793C9170E9678D19994D61A213FE29
925028E208DEBAE41C0BBCBFE69FF9920D5473AF395F9D07E27F7871953BCF83
0D8E781B183FAC31DAA08488CC639C348BCCB2FDEA9BF11CFC9CF589E0E5D912
9471AF733E09424A60685F4516C1BFC2912883835D495AFD44781CE0FCE03FD1
AEFD4190D530C243E82BACF9BBB7135AA21AC329BD25AFEB5284D0FEA70F0757
7047772298ABD77E1BC00DAA5CDC0B8C239EFAD8A783A1260C2C8114B1CEF1FB
FEEAE79B4EC33824BA74E4BEA34BA26730DC2B90DDA59868D0D53327118E0A9C
CF307F710DEBD7CE9A7888FE9B339E1561B4B83F838F8D9C615054192F4B8452
5908F8BAA5220EE28F4222C1FA5A97DB983BCF9F584866482CA7EC79A4AC1199
8E071F5260F6478E070D0EB84A342890283F5B5640CF3C44AA2A1724F5F09186
1086C71F7953533AC56D6265200EAB54BBF0FEF8154EC13229A8B2AF4E6F4449
04A576D348562D512556AF95293C7D115FCAD4853FE394BEE62A4A50E356EAA8
868DB37F4D663F183246F037704841181AA9648587A09E8BD044DCEF584652ED
F29680F41DC6D30C3B87448482F45C08D4E0EF8B8C63299CD53BE211B10C9B5C
28A65E998DE002C96396BA0413FC30097DDAE8237E4A34D9C413472B2EA38F17
3D29C443DC03930F36B48779449BAC308C6F43FE6CAC50C3314D6CF5FABC872B
B7CBADDD96379AAF85834398C2937AF2B1EEA58832DD7CF5C1E29104673FFF05
318CC3F90635CEE5E03D4910567FB7EF2CEA3DD949FFDBC1EB5419A9DD28A255
4BEFDC96EA8DABAB0AC230DCB02818AF9A164918DEA34758E0403DE294B3EE43
660E70D22D1F9F4F865B7E3D72C2097C761C40DBE2A9AD81F7002A27F2EDE345
9E49C2745514B56F8E0190FD4FA2A0A6266B9A9511819D1F2E0F341CD443E0F9
0CC36D65565B2A317094CFE27D918F5DCC127C76FF82E579A06D8A3A32345880
8BAD0F4E3F553934AE1CDEF29DE336B98C4ADD7F99BFF30C1D2EBBC1F3A14197
89198116202901B611D9294AA70086A115AE8AF7EA9C371BCE407C96840957E3
6A2008ADCA2CA74B5DAFA70C389BA8798B3CB383E4249E0919ADB799ACF71160
7ADA252DE7CDF57750DE134D16257E6989B76A91534C2564B0516C18C9EB0B1A
FE05A789CBE20DEC1DA560FCE287B86E393C824960DC43AB01B45966A9F6C2FD
A093CC4A456136B6AD2D692388534B0E643A05643E8A83038029E832F016A7FE
7F789B1C40AA9FECEE64779D73DC383C3E0FCD9101CC384C1488C4D37BF9F6EC
90F8B81FDEA7E93EE59CBD06497B40B6CE001EB5EE7A9F636F046CC24897AC3A
4A4B69B9262BEA8D983F72A8D5856E38EB16AF71A4A32B801E4AF89319F6B0B5
F32883144D56858DB62E818C0A197A853688E3AA3162E6138192E19652A23D58
DC33153C408ED9FDB7A1BAFF2F1602E398D58C69E40B6E071D6710FD81A5C59D
0F9224DA14A90F1691C479F86CD53E8CC9DE6B2DDB148E81B1F6B9E2B7C36C32
33AC20FADB3505BE2B8C29DB3630B72D102B8AF55D093AF2E3567278BCA1B75F
439B211312359A01B9D77727D38B9EE253F31B94C9AF9270C53B5EA44411BE39
9A1EFFE6AA02EBE529146BB9E0D14D1666A9EE3D37E8641DE801976EA3C2E3D3
26612EBF7276BB95045A7372EB87999E94BB52F8168D7B194D57EC6530162460
848153C749EF0DE6EC83878CE9C3969F827B2A28BD444DD1B0EFDAF667A91817
1169D86699C9AAAA8A72683C54B45F81F355D9D19496D0F80472B6D96E9F2E80
2299F67905281285F890FF78C7D0BE2125C767B37870CB666228744DB62F3258
8C5AA6C0219CF0E5ECDD3E91D91C57D820782A64C6A5A83CCCEFA5F6F52CE034
308E42C75983C5751E8D91AB6EED5B8A6E4DD06DE6407F57CBB23C12F76D3135
35879DA64FA8A2E3CD644234BA7F77FA96C0CBFBE7368359D2353672BBA626F6
A2103DAE69DB0BEBD21CC1E3CCC89BF0809008377D1D0CFDB4FB1128BB005614
7539D836FA1D609E7154612ECA41BE849D5BE1C72A07FECB4F40957EDF2170A6
E9FE56A43E47AC70F7D09EB87FA949FBA6FD194B269A119362353847D6E44E14
083FDD171EA303D2AFD535AA7EF60E005C6CE09C4F04BE23B7AA1DD413D12D9B
F1AC6B0B50AF45D75D8FAAFE386ED471EF229009DB3DB9A359FA47A0B75CD846
6A341255CB331AF4E1587C84F476966FA4CC8348DAD1B0E321CD4DAA7929B044
9BCC4612C47E3D3651D7D6E0C31A4A2589D16A0651774EF04FEEF4D27ACA13CB
72F6ED429DF7B054909D165AC58C5523A0DA508D49CFB93F6F721F708FB28C04
50
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 165770035 89989444 1000 600 600
(C:\Users\rakes\.matplotlib\tex.cache\dc\63\dc6353c38cf4f529c944582d3ff45c4f.dvi)
@start /Fa 139[138 194 3[249 249 2[249 53[249 249 249
249 50[{ TeXBase1Encoding ReEncodeFont }9 498.132 /NimbusRomNo9L-Regu
rf /Fb 146[430 109[{ .167 SlantFont }1 747.198 /StandardSymL
rf /Fc 204[276 276 276 276 48[{ TeXBase1Encoding ReEncodeFont }4
552.931 /NimbusRomNo9L-Regu rf /Fe 133[332 374 3[374
2[249 374 2[374 8[332 374 332 1[332 13[415 2[415 3[457
3[539 1[415 3[498 9[374 1[374 1[374 1[374 374 374 208
5[249 249 40[{ TeXBase1Encoding ReEncodeFont }25 747.198
/NimbusRomNo9L-Regu rf /Fg 139[23 32 28 1[42 1[42 65
23 4[42 28 37 1[37 1[37 13[46 2[46 80[{ TeXBase1Encoding ReEncodeFont }
14 83.022 /NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 10800 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate

-600 10800 a -600 10800 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 90.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
0.000000]](psmarker14)[[14(bl)1 0.000000]](psmarker15)[[15(bl)1 0.000000]]16
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 10800 a @beginspecial
0 @llx 0 @lly 2520 @urx 1368 @ury 25200 @rwi @clip @setspecial
%%BeginDocument: C:/Users/rakes/AppData/Local/Temp/tmph10gpujg/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: Comparison_of_flow_noise_3D_Different_speed.eps
%%Creator: Matplotlib v3.7.3, https://matplotlib.org/
%%CreationDate: Wed Oct 30 13:37:05 2024
%%BoundingBox: 0 0 2520 1368
%%HiResBoundingBox: 0.000000 0.000000 2520.000000 1368.000000
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
2520 1368 0 0 clipbox
gsave
0 0 m
2520 0 l
2520 1368 l
0 1368 l
cl
1.000 setgray
fill
grestore
gsave
254.323021 181.405346 m
2448.580201 181.405346 l
2448.580201 1358 l
254.323021 1358 l
cl
1.000 setgray
fill
grestore
0.800 setlinewidth
1 setlinejoin
2 setlinecap
[] 0 setdash
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 181.405346 m
254.323021 1358 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 181.405 o
grestore
gsave
192.903 112.986 moveto
(psmarker0)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
985.742081 181.405346 m
985.742081 1358 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
985.742 181.405 o
grestore
gsave
924.322 112.986 moveto
(psmarker1)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1717.161141 181.405346 m
1717.161141 1358 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1717.16 181.405 o
grestore
gsave
1655.741 112.986 moveto
(psmarker2)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2448.580201 181.405346 m
2448.580201 1358 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2448.58 181.405 o
grestore
gsave
2387.16 112.986 moveto
(psmarker3)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
474.502098 181.405346 m
474.502098 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
474.502 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
603.298601 181.405346 m
603.298601 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
603.299 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
694.681174 181.405346 m
694.681174 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
694.681 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
765.563005 181.405346 m
765.563005 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
765.563 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
823.477677 181.405346 m
823.477677 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
823.478 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
872.443835 181.405346 m
872.443835 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
872.444 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
914.860251 181.405346 m
914.860251 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
914.86 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
952.27418 181.405346 m
952.27418 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
952.274 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1205.921158 181.405346 m
1205.921158 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1205.92 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1334.717661 181.405346 m
1334.717661 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1334.72 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1426.100234 181.405346 m
1426.100234 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1426.1 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1496.982065 181.405346 m
1496.982065 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1496.98 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1554.896737 181.405346 m
1554.896737 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1554.9 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1603.862895 181.405346 m
1603.862895 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1603.86 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1646.27931 181.405346 m
1646.27931 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1646.28 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1683.69324 181.405346 m
1683.69324 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1683.69 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1937.340217 181.405346 m
1937.340217 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1937.34 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2066.13672 181.405346 m
2066.13672 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2066.14 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2157.519294 181.405346 m
2157.519294 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2157.52 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2228.401124 181.405346 m
2228.401124 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2228.4 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2286.315797 181.405346 m
2286.315797 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2286.32 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2335.281955 181.405346 m
2335.281955 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2335.28 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2377.69837 181.405346 m
2377.69837 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2377.7 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2415.1123 181.405346 m
2415.1123 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2415.11 181.405 o
grestore
gsave
1069.55 10 moveto
(psmarker4)
show
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 181.405346 m
2448.580201 181.405346 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 181.405 o
grestore
gsave
202.491 150.382 moveto
(psmarker5)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 395.331647 m
2448.580201 395.331647 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 395.332 o
grestore
gsave
157.659 364.308 moveto
(psmarker6)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 609.257948 m
2448.580201 609.257948 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 609.258 o
grestore
gsave
157.659 578.235 moveto
(psmarker7)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 823.184248 m
2448.580201 823.184248 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 823.184 o
grestore
gsave
157.659 792.161 moveto
(psmarker8)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 1037.110549 m
2448.580201 1037.110549 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 1037.11 o
grestore
gsave
157.659 1006.087 moveto
(psmarker9)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 1251.03685 m
2448.580201 1251.03685 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 1251.04 o
grestore
gsave
112.827 1220.014 moveto
(psmarker10)
show
grestore
gsave
87.533 341.716 moveto
(psmarker11)
show
grestore
8.000 setlinewidth
2 setlinecap
gsave
2194.257 1176.595 254.323 181.405 clipbox
438.714381 1011.079964 m
457.153517 1009.959539 l
475.592653 1004.720249 l
494.031789 1004.750036 l
512.470925 1012.728368 l
530.910061 1012.576832 l
549.349197 1008.430777 l
567.788333 1010.497641 l
586.227469 1013.363548 l
604.666605 1009.756653 l
623.105741 1009.924738 l
641.544877 1006.942677 l
659.984013 1002.409673 l
678.423149 994.241821 l
696.862284 998.760817 l
715.30142 992.593125 l
733.740556 990.893821 l
752.179692 993.078834 l
770.618828 990.513516 l
789.057964 984.789888 l
807.4971 979.876576 l
825.936236 976.981569 l
844.375372 982.842609 l
862.814508 984.387639 l
881.253644 978.163321 l
899.69278 967.036345 l
918.131916 964.453165 l
936.571052 954.070162 l
955.010188 949.47074 l
973.449324 950.808106 l
991.88846 943.861479 l
1010.327596 937.777603 l
1028.766732 928.704278 l
1047.205868 919.330524 l
1065.645004 910.363908 l
1084.08414 906.777876 l
1102.523276 892.527001 l
1120.962412 879.015795 l
1139.401548 870.302236 l
1157.840683 856.139739 l
1176.279819 840.281482 l
1194.718955 828.113634 l
1213.158091 813.017121 l
1231.597227 797.865113 l
1250.036363 782.01925 l
1268.475499 767.109874 l
1286.914635 752.575316 l
1305.353771 742.973126 l
1323.792907 727.806085 l
1342.232043 713.462456 l
1360.671179 700.314401 l
1379.110315 681.146845 l
1397.549451 668.814978 l
1415.988587 658.484311 l
1434.427723 646.033985 l
1452.866859 629.20943 l
1471.305995 615.918617 l
1489.745131 602.64027 l
1508.184267 588.976425 l
1526.623403 577.813075 l
1545.062539 565.217438 l
1563.501675 551.971342 l
1581.940811 546.748674 l
1600.379947 535.478501 l
1618.819082 527.317732 l
1637.258218 518.49551 l
1655.697354 508.819649 l
1674.13649 498.889577 l
1692.575626 493.09671 l
1711.014762 485.33669 l
1729.453898 480.139701 l
1747.893034 474.100025 l
1766.33217 467.820988 l
1784.771306 457.187975 l
1803.210442 449.949609 l
1821.649578 443.037572 l
1840.088714 436.600858 l
1858.52785 430.376393 l
1876.966986 426.252864 l
1895.406122 419.177124 l
1913.845258 412.661454 l
1932.284394 404.735982 l
1950.72353 397.843628 l
1969.162666 390.397651 l
1987.601802 385.912076 l
2006.040938 378.628378 l
2024.480074 372.22747 l
2042.91921 365.757875 l
2061.358345 359.900519 l
2079.797481 351.657688 l
2098.236617 345.042158 l
2116.675753 340.027858 l
2135.114889 332.44573 l
2153.554025 329.795038 l
2171.993161 325.792397 l
2190.432297 319.919875 l
2208.871433 315.406681 l
2227.310569 307.350908 l
2245.749705 302.518748 l
2264.188841 298.256506 l
2282.627977 294.716669 l
2301.067113 288.916335 l
2319.506249 284.5356 l
2337.945385 280.785818 l
2356.384521 274.153561 l
2374.823657 268.936445 l
2393.262793 263.449516 l
2411.701929 257.865661 l
2430.141065 255.130627 l
2448.580201 251.142472 l
stroke
grestore
0 setlinecap
[8 13.2] 0 setdash
gsave
2194.257 1176.595 254.323 181.405 clipbox
438.714381 1072.714947 m
457.153517 1071.759537 l
475.592653 1070.13833 l
494.031789 1070.139532 l
512.470925 1077.003371 l
530.910061 1082.972021 l
549.349197 1077.527815 l
567.788333 1080.847154 l
586.227469 1085.762895 l
604.666605 1086.016998 l
623.105741 1085.44951 l
641.544877 1085.707571 l
659.984013 1084.44155 l
678.423149 1075.744108 l
696.862284 1080.69209 l
715.30142 1076.527674 l
733.740556 1075.851473 l
752.179692 1081.05589 l
770.618828 1078.316453 l
789.057964 1073.291625 l
807.4971 1068.658341 l
825.936236 1070.223307 l
844.375372 1075.74364 l
862.814508 1075.887237 l
881.253644 1074.897064 l
899.69278 1067.109973 l
918.131916 1062.476613 l
936.571052 1058.392547 l
955.010188 1052.961336 l
973.449324 1051.618489 l
991.88846 1047.268029 l
1010.327596 1044.106913 l
1028.766732 1040.141226 l
1047.205868 1036.056221 l
1065.645004 1035.756971 l
1084.08414 1038.43409 l
1102.523276 1030.438907 l
1120.962412 1025.231916 l
1139.401548 1016.254516 l
1157.840683 1010.244413 l
1176.279819 1005.071653 l
1194.718955 997.069916 l
1213.158091 983.187938 l
1231.597227 967.57963 l
1250.036363 952.41049 l
1268.475499 937.382713 l
1286.914635 919.135512 l
1305.353771 909.387502 l
1323.792907 899.404713 l
1342.232043 890.879159 l
1360.671179 879.186834 l
1379.110315 860.282863 l
1397.549451 847.401867 l
1415.988587 835.564745 l
1434.427723 820.537923 l
1452.866859 803.060922 l
1471.305995 785.970821 l
1489.745131 774.251014 l
1508.184267 758.370591 l
1526.623403 740.906719 l
1545.062539 721.499171 l
1563.501675 704.559157 l
1581.940811 693.045853 l
1600.379947 678.869863 l
1618.819082 668.839674 l
1637.258218 657.516984 l
1655.697354 645.489727 l
1674.13649 632.065598 l
1692.575626 621.068127 l
1711.014762 608.330833 l
1729.453898 597.338616 l
1747.893034 591.028686 l
1766.33217 580.567843 l
1784.771306 568.34658 l
1803.210442 557.889145 l
1821.649578 548.893859 l
1840.088714 540.953181 l
1858.52785 533.375229 l
1876.966986 527.418416 l
1895.406122 520.949473 l
1913.845258 513.511036 l
1932.284394 506.906121 l
1950.72353 496.369988 l
1969.162666 489.991159 l
1987.601802 485.73097 l
2006.040938 480.81189 l
2024.480074 473.748685 l
2042.91921 466.692131 l
2061.358345 460.802348 l
2079.797481 453.424546 l
2098.236617 446.543056 l
2116.675753 442.106809 l
2135.114889 434.728806 l
2153.554025 430.801366 l
2171.993161 426.577238 l
2190.432297 420.497878 l
2208.871433 412.86736 l
2227.310569 407.016034 l
2245.749705 402.560019 l
2264.188841 398.435262 l
2282.627977 392.260466 l
2301.067113 385.138337 l
2319.506249 378.267928 l
2337.945385 374.24022 l
2356.384521 368.707892 l
2374.823657 361.059767 l
2393.262793 353.760614 l
2411.701929 350.139751 l
2430.141065 343.265306 l
2448.580201 340.9272 l
stroke
grestore
[29.6 12.8] 0 setdash
gsave
2194.257 1176.595 254.323 181.405 clipbox
438.714381 1121.731479 m
457.153517 1122.480483 l
475.592653 1112.985819 l
494.031789 1107.552745 l
512.470925 1111.258498 l
530.910061 1113.867276 l
549.349197 1108.927346 l
567.788333 1111.999044 l
586.227469 1113.597131 l
604.666605 1113.225921 l
623.105741 1113.915267 l
641.544877 1113.286553 l
659.984013 1108.530081 l
678.423149 1108.739567 l
696.862284 1114.205936 l
715.30142 1110.783612 l
733.740556 1108.666002 l
752.179692 1115.421571 l
770.618828 1114.262478 l
789.057964 1115.311701 l
807.4971 1114.085842 l
825.936236 1115.224358 l
844.375372 1123.560615 l
862.814508 1128.390694 l
881.253644 1126.024651 l
899.69278 1120.66811 l
918.131916 1121.875628 l
936.571052 1121.042759 l
955.010188 1116.502899 l
973.449324 1116.954751 l
991.88846 1111.319999 l
1010.327596 1112.597689 l
1028.766732 1110.25367 l
1047.205868 1110.00202 l
1065.645004 1107.37605 l
1084.08414 1108.796815 l
1102.523276 1104.951008 l
1120.962412 1102.020453 l
1139.401548 1095.947516 l
1157.840683 1095.417212 l
1176.279819 1092.09564 l
1194.718955 1089.66845 l
1213.158091 1077.375276 l
1231.597227 1066.974515 l
1250.036363 1051.273929 l
1268.475499 1042.307467 l
1286.914635 1031.195061 l
1305.353771 1020.672376 l
1323.792907 1007.525753 l
1342.232043 996.307976 l
1360.671179 981.757054 l
1379.110315 965.546404 l
1397.549451 948.152807 l
1415.988587 937.541906 l
1434.427723 924.273035 l
1452.866859 910.265957 l
1471.305995 895.276232 l
1489.745131 883.422974 l
1508.184267 868.90722 l
1526.623403 856.397218 l
1545.062539 838.252564 l
1563.501675 821.781955 l
1581.940811 809.662213 l
1600.379947 795.86433 l
1618.819082 783.55867 l
1637.258218 768.904985 l
1655.697354 752.844628 l
1674.13649 735.772882 l
1692.575626 719.420911 l
1711.014762 706.866803 l
1729.453898 694.18317 l
1747.893034 686.108167 l
1766.33217 673.593432 l
1784.771306 660.058408 l
1803.210442 648.979682 l
1821.649578 637.604756 l
1840.088714 627.560344 l
1858.52785 617.82521 l
1876.966986 611.05455 l
1895.406122 601.460559 l
1913.845258 590.922045 l
1932.284394 577.689122 l
1950.72353 567.052569 l
1969.162666 559.206035 l
1987.601802 555.315704 l
2006.040938 547.344722 l
2024.480074 539.659643 l
2042.91921 532.904626 l
2061.358345 526.84392 l
2079.797481 517.253778 l
2098.236617 513.387698 l
2116.675753 508.624198 l
2135.114889 503.874736 l
2153.554025 500.055228 l
2171.993161 496.15589 l
2190.432297 489.226551 l
2208.871433 483.701993 l
2227.310569 477.351826 l
2245.749705 473.039875 l
2264.188841 468.441084 l
2282.627977 464.499132 l
2301.067113 456.342704 l
2319.506249 452.151425 l
2337.945385 447.611762 l
2356.384521 441.116381 l
2374.823657 432.958406 l
2393.262793 425.303876 l
2411.701929 418.751044 l
2430.141065 413.382321 l
2448.580201 409.232414 l
stroke
grestore
[51.2 12.8 8 12.8] 0 setdash
gsave
2194.257 1176.595 254.323 181.405 clipbox
438.714381 1146.933807 m
457.153517 1144.376863 l
475.592653 1141.518695 l
494.031789 1141.268041 l
512.470925 1151.469559 l
530.910061 1155.613198 l
549.349197 1149.387401 l
567.788333 1151.933449 l
586.227469 1155.157699 l
604.666605 1154.034612 l
623.105741 1155.207111 l
641.544877 1155.337566 l
659.984013 1150.538425 l
678.423149 1148.384231 l
696.862284 1151.044842 l
715.30142 1140.714266 l
733.740556 1141.230493 l
752.179692 1147.761812 l
770.618828 1146.234101 l
789.057964 1146.079875 l
807.4971 1143.734508 l
825.936236 1149.914878 l
844.375372 1155.836437 l
862.814508 1164.511893 l
881.253644 1161.622909 l
899.69278 1160.30734 l
918.131916 1163.295919 l
936.571052 1165.932383 l
955.010188 1165.122445 l
973.449324 1167.663969 l
991.88846 1165.764704 l
1010.327596 1169.171826 l
1028.766732 1166.436017 l
1047.205868 1164.069253 l
1065.645004 1160.866059 l
1084.08414 1168.608688 l
1102.523276 1164.190581 l
1120.962412 1160.160402 l
1139.401548 1152.343938 l
1157.840683 1151.949213 l
1176.279819 1149.015646 l
1194.718955 1144.103783 l
1213.158091 1133.761414 l
1231.597227 1128.555321 l
1250.036363 1122.665105 l
1268.475499 1117.295204 l
1286.914635 1104.182728 l
1305.353771 1096.098339 l
1323.792907 1086.616832 l
1342.232043 1083.458245 l
1360.671179 1068.982421 l
1379.110315 1052.597845 l
1397.549451 1039.753085 l
1415.988587 1031.003337 l
1434.427723 1016.136939 l
1452.866859 1001.268459 l
1471.305995 986.825909 l
1489.745131 974.617969 l
1508.184267 960.86839 l
1526.623403 949.017662 l
1545.062539 928.768683 l
1563.501675 914.119173 l
1581.940811 905.920375 l
1600.379947 891.104553 l
1618.819082 877.052565 l
1637.258218 860.173488 l
1655.697354 843.466805 l
1674.13649 827.303878 l
1692.575626 810.786038 l
1711.014762 797.452886 l
1729.453898 781.950495 l
1747.893034 770.37501 l
1766.33217 756.249719 l
1784.771306 741.60678 l
1803.210442 728.516187 l
1821.649578 715.859861 l
1840.088714 703.83445 l
1858.52785 692.439185 l
1876.966986 679.439402 l
1895.406122 668.381797 l
1913.845258 655.908703 l
1932.284394 647.677136 l
1950.72353 636.059144 l
1969.162666 626.400826 l
1987.601802 616.777379 l
2006.040938 608.04237 l
2024.480074 599.380556 l
2042.91921 590.727623 l
2061.358345 582.531623 l
2079.797481 574.773748 l
2098.236617 567.531678 l
2116.675753 559.71334 l
2135.114889 550.711082 l
2153.554025 545.819766 l
2171.993161 541.622233 l
2190.432297 537.208047 l
2208.871433 530.580157 l
2227.310569 522.614275 l
2245.749705 517.483976 l
2264.188841 513.582182 l
2282.627977 508.660817 l
2301.067113 502.417811 l
2319.506249 498.774261 l
2337.945385 494.381741 l
2356.384521 490.883702 l
2374.823657 483.476034 l
2393.262793 477.197778 l
2411.701929 471.913738 l
2430.141065 467.153035 l
2448.580201 464.122336 l
stroke
grestore
0.800 setlinewidth
0 setlinejoin
2 setlinecap
[] 0 setdash
gsave
254.323021 181.405346 m
254.323021 1358 l
stroke
grestore
gsave
2448.580201 181.405346 m
2448.580201 1358 l
stroke
grestore
gsave
254.323021 181.405346 m
2448.580201 181.405346 l
stroke
grestore
gsave
254.323021 1358 m
2448.580201 1358 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
2040.21524 970.236107 m
2406.580201 970.236107 l
2414.580201 970.236107 2418.580201 974.236107 2418.580201 982.236107 c
2418.580201 1316 l
2418.580201 1324 2414.580201 1328 2406.580201 1328 c
2040.21524 1328 l
2032.21524 1328 2028.21524 1324 2028.21524 1316 c
2028.21524 982.236107 l
2028.21524 974.236107 2032.21524 970.236107 2040.21524 970.236107 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
8.000 setlinewidth
1 setlinejoin
2 setlinecap
0.000 setgray
gsave
2052.21524 1283 m
2112.21524 1283 l
2172.21524 1283 l
stroke
grestore
gsave
2220.215 1261.582 moveto
(psmarker12)
show
grestore
0 setlinecap
[8 13.2] 0 setdash
gsave
2052.21524 1198.059027 m
2112.21524 1198.059027 l
2172.21524 1198.059027 l
stroke
grestore
gsave
2220.215 1176.641 moveto
(psmarker13)
show
grestore
[29.6 12.8] 0 setdash
gsave
2052.21524 1113.118053 m
2112.21524 1113.118053 l
2172.21524 1113.118053 l
stroke
grestore
gsave
2220.215 1091.7 moveto
(psmarker14)
show
grestore
[51.2 12.8 8 12.8] 0 setdash
gsave
2052.21524 1028.17708 m
2112.21524 1028.17708 l
2172.21524 1028.17708 l
stroke
grestore
gsave
2220.215 1006.759 moveto
(psmarker15)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 10800 a
 /End PSfrag
 -600 10800 a -600 2021 a
 /Hide PSfrag
 -600
2021 a -1285 2077 a Fg(PSfrag)20 b(replacements)p -1285
2109 685 4 v -600 2112 a
 /Unhide PSfrag
 -600 2112 a -1628 2773 a
  {
 -1628
2773 a Black 0.000 0.000 0.000 TeXcolorrgb -12 x Fe(10)-880
2490 y Fc(0)p Black Black -1628 2773 a
  } 0/Place PSfrag
 -1628 2773 a -1628
3434 a
  {
 -1628 3434 a Black 0.000 0.000 0.000 TeXcolorrgb
-12 x Fe(10)-880 3151 y Fc(1)p Black Black -1628 3434
a
  } 1/Place PSfrag
 -1628 3434 a -1628 4095 a
  {
 -1628 4095 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(10)-880 3812 y Fc(2)p Black Black
-1628 4095 a
  } 2/Place PSfrag
 -1628 4095 a -1628 4756 a
  {
 -1628 4756 a Black
0.000 0.000 0.000 TeXcolorrgb -12 x Fe(10)-880 4473 y
Fc(3)p Black Black -1628 4756 a
  } 3/Place PSfrag
 -1628 4756 a -5298 5436
a
  {
 -5298 5436 a Black 0.000 0.000 0.000 TeXcolorrgb -162
x Fe(Frequenc)-11 b(y)184 b(\(Hz\))p Black Black -5298
5436 a
  } 4/Place PSfrag
 -5298 5436 a -974 5955 a
  {
 -974 5955 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(0)p Black Black -974 5955 a
  } 5/Place PSfrag
 -974
5955 a -1347 6475 a
  {
 -1347 6475 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(20)p Black Black -1347 6475 a
  } 6/Place PSfrag
 -1347
6475 a -1347 6995 a
  {
 -1347 6995 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(40)p Black Black -1347 6995 a
  } 7/Place PSfrag
 -1347
6995 a -1347 7525 a
  {
 -1347 7525 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(60)p Black Black -1347 7525 a
  } 8/Place PSfrag
 -1347
7525 a -1347 8045 a
  {
 -1347 8045 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(80)p Black Black -1347 8045 a
  } 9/Place PSfrag
 -1347
8045 a -1721 8565 a
  {
 -1721 8565 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(100)p Black Black -1721 8565 a
  } 10/Place PSfrag
 -1721
8565 a -7378 9383 a
  {
 -7378 9383 a Black 0.000 0.000 0.000
TeXcolorrgb -169 x Fe(SPL)j(\(dB)g(re)f(1)19 b Fb(m)62
b Fe(P)-11 b(a)-2208 8943 y Fc(2)-1928 9214 y Fe(/Hz\))p
Black Black -7378 9383 a
  } 11/Place PSfrag
 -7378 9383 a -2053 9736 a
  {
 -2053
9736 a Black 0.000 0.000 0.000 TeXcolorrgb -6 x Fa(2)125
b(knots)p Black Black -2053 9736 a
  } 12/Place PSfrag
 -2053 9736 a -2053
10091 a
  {
 -2053 10091 a Black 0.000 0.000 0.000 TeXcolorrgb
-7 x Fa(3)g(knots)p Black Black -2053 10091 a
  } 13/Place PSfrag
 -2053 10091
a -2053 10445 a
  {
 -2053 10445 a Black 0.000 0.000 0.000
TeXcolorrgb -6 x Fa(4)g(knots)p Black Black -2053 10445
a
  } 14/Place PSfrag
 -2053 10445 a -2053 10800 a
  {
 -2053 10800 a Black 0.000 0.000 0.000
TeXcolorrgb -7 x Fa(5)g(knots)p Black Black -2053 10800
a
  } 15/Place PSfrag
 -2053 10800 a 20400 10800 a
 currentpoint grestore moveto
 20400 10800 a Black Black
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
