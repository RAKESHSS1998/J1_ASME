%!PS-Adobe-2.0
%%Creator: dvips(k) 2024.1 (TeX Live 2024)  Copyright 2024 Radical Eye Software
%%Title: d53bb522e608ee69cd09035e0ac8855c.dvi
%%CreationDate: Wed Oct 30 08:04:02 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 2520 1368
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\rakes\AppData\Local\Temp\tmp5fzkye7n\tmp.ps
%+ C:\Users\rakes\.matplotlib\tex.cache\d5\3b\d53bb522e608ee69cd09035e0ac8855c.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.10.30:1334
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2024 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEB6892874B4D6B35F4BA2895
2DDF4C9B8200B32D7368EC950C963D1DE798F32708041E395A94A27CF34DA94C
B1F8A8AE4E95E3D9D23DBB28D017F1A5A232B2533A21F4FAF71C5CD8623B1DB3
75DEDBBC846759B3DDBACBD0BB9FE882315994E7704F25655F9332C1ACC7C130
53510645FF66168961B7D66288CF36C97474DF121FE8E9B9CDC1B4F27BDAD2A0
4EAFC90D9DEE76C678DB7E7DEAAC1AE5F0C5AA20C9489CF6BF32D2A3CAD6BD84
A5074B5832023E809B80408BB9B61C23FD31B10B777D6D0303D8672E44415545
1033CEE160F9FBE554BD27786B870B25727E7084BEA8B53016FD85CF9289DF78
EE12F3DEB4E33DCD967D167E99036FF3B1B8EA0380FFD69361F81BAF8D677E07
6CEC52D4E5526B66BC38B0CC9669D8D3BCEAEC9258D51D73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A10335A0A09DDE121A580DC892423613708F967186
E210792D9EA463C2FB76BC889370A04D8682D0AE03DE6338AA0D62613C595D1E
9AA52AAD14BB8222997715DC16BB65D88A7AAD93961976DE90E40187EA775CC4
040046CF004AF4D76C8434E66ADB72B6710A1830B017A9711B886A186DB61E3F
985EEFDAD748E35BA0325B03468042550ED9739076EB30477D455C7DF2258C28
036A4B32B3491B7D4E0731012EF40527BF0AA0FBCFC9A2833660300628954409
1C3074E04673F0EF8B894110FCC770E127C526F1BC74B8294CC06FD8B590728C
D790989027AB9043E20F807BC9C2A57259E74D6DB20FD6F05AAA14D659527745
31A01D08AF8F62874DE9FFBD9C7300D3C2260F9633816ACF8132B8CB3FBE5D03
9C24DD75C7A4F038C15E7007939680912BE6F4727392706083F71F65226003CB
9EC18D503C34B6D031F7AE1F58AE1F5CC02281429B33760498C875E808F05BD9
039DFAE90751B085BDF6F5AA9A634B5BDA458E4F3E17638B00884A463DC008F0
470EFFD7D7B805231450985FE13F6F382BED2C0333FCCDE9366DDBA66334B972
95BFA4099D149EE93FBCC6272AF549BDC5C3CC23E1FD81849C040C7EE7BEFF04
E2E8606318816EFAA8E50F91A710D45BB0452D7895FED4BB91EE2A8B51C5A80C
5C7238AB883E083EA59959A3000F6558915E59246A382A2EF44013126E974503
0171081E540DE6141FECE531A950C0A07C88F66C2C6D8FDE6FEE1B6CD3542AA4
3722748EBAD8C81EE73B03FB45FA74E1A30B1E99309ABDC421B1B6ADD417F9E3
43129066B60DF044FDCB15FC368380FB7CF6EAF2AA24715FF25DF54CA84A035F
4C776BB4C86FA062F8EA9C0BE34CEC934F99C14E10FF15517C5CB80D692C3EA4
05779CDCAE96C243488EB42B699CE87B504090E27BDBFDB0DA6E692974E9DD55
ABC6F9ECC41930141116A4F26A9A4B055A3943E6C03D88A81CA6D598923590A3
899A367E9C05C282BD7D17FD6CF87AA8FF4359A3F1CB2632F340C4DE9E17A0AC
389FE104E141F00F84DCA5580945FEFDF28654505C7F7FB50EDDEE2C8FEEDC15
46675AE16824DD84B6CA375598B6C439A2E90BAE42BE0A650D81D9F7079793D6
FDBFDDDC1EA9AE9048C95AEEA4C65E463AC3961D2D195C1560E30A519C91052D
8F2271585D7BD902F471D99ED216F355139FE5B1C02DE323917F5A206046CDAB
D9D54EA413DE48450DFB26A3E003F3B3FBBF28863BD0C4165279A8F736599691
7E4A016C5B0D77A277EE5A0BA86B250C9A68A35020B390317A8F1B0971C84FBB
39F5FB23526A003729BA10324BA72B5820956B861A9735C2229ACD15B24F440A
40A69FAC2613E33319EA7DCFD8E886839A0D0B3FA0CA60A2E57AA31C1371F8C2
79D4D209102B0F7796B3FF181058A150426089EC7071143F5170878A4B02281A
34BBC6A4F370DE91AE957650FE5AFF7868819D52907413D171FC81DB91A0A789
EAE744D803926C343A87651B0F9FCEC27F5ED66F4591F19D573EB051F616E02E
21F171B38D2554D7D0774A2AA4173368D1C272AC65DB754E14D890F68526D864
CE8D7F8AEF58EC30481170E1B3E5D161A4B13C5693C3BC8392B8940C458A6757
C268C005A3ADB919976D4DBF8CC337B7023C305B957FFE68652B85CEFAA1EEBF
5C8195B1DC0DB6AE30654F8638918D5B677BBE7CB6558ABB29307BFEF201C53F
8B3FBA60A744C426C15A2DECCBF70DF0F6B084832576AC709534F4E828639086
00BB74AEAC0DB1C964459ED2ACD1FB24A64EDC496A7441E297A239F6DB762C63
3B2BE5BD24E2ED72605C996B7DF4908EAD71C474638B71F68CBBC9ED5CEAFEC8
9B4D41968B0C4AB19C72ACB183A82558C9244D08F196A1FF99CA74B2F4C88E7A
EE127E914C372C6E2DD84989E78792EC3F55331548A348C48D19182D79249080
AD244A961CCBDEEB2B1674DD4546756FF8D79D108816E9072BCDD886F08E74F7
24DB01EC7E67FC33903B7DDA3697D159B5DB520A27D96B1E7FD78689111BFA6B
2D1015854A43B3CD12C56C7856D4B0ECD4E415CC9290C79FE24F1D260275F485
F8A27B76856919419613973269D39C75D085544C9A64BAE28239DA8BEB1A6A96
E95B783B1FF154203496AAD69A05A3349349C965D9025A5318E6C9D076E6389B
8F7471FC666CB194CF4D162729D742DE146036351104954ABB269B117E393AC5
E328654BCFA54DA33831938E9392DEF7594DE827864CD1D0B7FB3907739D7EC6
A3BD1B16ED4B0620CD94F6A13F13BA97269BF4593E30CF027EF28C6B0553B633
80AB3A68098EA2EB484D0FF08E196EFC5F2CE715B765EEB5207895D8AAE70819
6E122DAA1E98C127199A84F067F33213ECF7D1A49BE7AD6D6BAACE6C3E98644B
EC870B501018824C0E0CFD58F97A957FF98D5BDA3E3E0963BC0889BCF9798C25
53547A61E792FFF1871D175A7DD93EF7A0442BCC703B3D6E17814DE77454DC15
2B2CD12041A9F886F6A759B58BC29DEA9B9BF08BBD7316407DB667534F267E97
13229F7B3A3054B8C7E2CD0483B67A15A01C8DAA5F5DCA2A596671354A739F6D
DBB748D032DE92149840083DA532A70F6A9A242561B587EBD523471911715F16
FD79F34C5A27A213ACE6B195674328FF4EB9E2AB773D24F84D3597ACEB63E711
90FACD33B8DD061AB0249B50791A55DCCC94F718D801B406EC6F95EE8E5A0F5B
56746711DB8A35BA5C0CDA1B9F0FBC9D0387353E93EA97B8302F34FCDAE7BA92
1849FE8E65EAD85C9445AE061A93EC67A078EF26AEDCEC4BF7B33C86BCF27163
0CB60AE1C3756297B8F218BB92C4536554BCB04D9FC30F3E53249F2A50C5F62A
C58C3F8E419DC3ACD44C831A58F2EAADBEC739FD624F6A9BAD13D61857519977
DD5BBD317B3402D11CD481B279B9DCE91B5AE82CBF821D0CA2394715CBF564DA
93472DE9CDCF42546F422F2272A77C7B24EA082C8B2671CEB212E0F42F6F95DE
7370CCF2E687548BF0022C97B939BF23B27B2DF046F314DBFE68DDB61B2D4B96
EBEB110DEBD28BCCD7B42E245579D29D18D7BCEC088C0DDD5C6C2F44BF832E4D
54880BAF264A4431884E8BD834A1E8AB45FFE334532FFF6EE351252820E235FB
1497E97C252D233534F47521E168D225F364D6D6FAE9BA6357112336162FFCF2
F3B4CA7EEA93282C8ECF877589B206A1363B24D9F8E434FFEB507EA58F3C6BBA
54E11929F21078AB158F3D371257512495CD7323EFD97218971819C58624089F
E39F416FB3FC6812E3A132F5662F97BDC23F7979F802D54822CCEF7FBB56558D
69FB699E5EF78ECB6C3E02F2391C4FFAAD4334D0C76FC6E52A9C25F8091C4930
A63A3BDFF5CEE8FA00CCBCF7322BAE688DFD73F7115169B32AB8B6C05B273204
417BA5DEEFF27E8E687DAD0D563C70F88ABCACF34D3D4C33FC832602DC5027B4
CD2F093C653F72E434C6A84CC939AC2CA46B3CDB5C010AF9D3963C04EDD832CE
36C6A8C704DB8B1BCC5F0857344346C030A2C162DE1FA1F44B0075E2F2608258
70ED919BCCE11E945D3CEDDDA353E1830AB52E54E1718F7B559EBD43E9C644B9
89246C804CE808C1C0F3F3863F465ADA62540F38EEE066651BC340F29DAC3B59
51B557D62C7728D6E3F13BE05939C2A6F9F16673B2715D375CD401A944BC1D10
15FD6A95C3F462988FD59CDB721E0041BB3DDC31F80D52718A5534A786210197
523609F5265D108486A8D7E35077946A50EABD3881F89504703150AD9B8A1A7B
6101D72278FE081FA7A69652086C26A082C68D0BCD1E6E0C272C2A2AA763C063
72F1ABB8AB83DF7250E9D84CC1D3005CE0EA4D4F1B878734B619EAB333606866
830AAF90F2A0E1920CA9D56302BD0EF73B710906677AB294DAB3E78069B62F88
F28FA8E91C185E7F1FB35C3BE9F6090D5DFAE177B8DB3E6781458685108FED42
F6736BD633979FC177BF35A0C7CE8B2961668F7F6E96C8E7829242F1E05AA1A3
BA678F41052542332A7EDDE9B4255C64F958E25C3CE462A08519B8A3AE175EA8
7DD3836D107EB68692BCFB1B6E4F4BBED8DDF2CC28B70C3A760F4A0556FE49D2
299B3B24B22853BACC317278E858E4B3E9AD496B7C1CBD7F8E0DC04489EA9618
9A67FC4E09BE412785550A6B57D988DF43841531AABDE1150A8BCDAA1865544E
E094F406EF7DCECF9D904D5D100DF71184DFFDC78FAEAB0975329109C6A52C4D
512B80752200BAA2249B648DCBEFF137E476FE5A098E909C1FD801ED495D1245
4110FB8912B2DD3CD85C0CD361709517AFE40224B897BA6CD6DB3BEC3AD3AF85
AB2437D27AFAA023B97C36C591AB5883F64ED7A5102477B22146E4BA9B0C56C6
9E720FB561978B0E542BA914110E52B718525FA2775FF18416CC403A2175E7B3
EB6D040ACFEE696B8DBACC4BE043F586BF6669AD1977706855B09FE855AAAEF1
BF1EDDFC1A9B7E32F2B3020DA6AC819B13087B8314DA0B7D6B78937829489483
B17A7A8B3778B119B9E4FC87F7738111A3D433733813BCCDD66C09559D96D7B5
E3A88B93A8749A6D3AB2CD87F4DE73AB38A659BBE04761CB9AE2986D0A27CC11
86C39E7571360B85CCB42EA01EDF862D8267ED72388FFB5D7F73BF49A37E695A
7695FE9B0A14BD7856DC7DB84DEB6DA73092F21F04F718009DBA58BF46A92F35
A599C58E9CB8EAE9A2064A6CD3A2BD1F60148D9CA8743ACB24EF5B77E0CA5AC1
E6F13A8BA831CCF52A814806455B7277CA7044515630345FCD7D372A38C0F3B3
FFB1F9D7B7A870654695C6834B365C39F4F559316AAB818BB04DCB92F1AE54A8
CE885FD11125F49600C8019CD8B56CB7093F9D3375E6210F659B50970299514C
54607FEBDB52F0E3F5FE73B7D1E30D368C3AC576DD5A9DE04B77BC89FF0D605D
ACB74CF664D38090B4D02DC97E4FCEF493E676D7F74084F83E6FE0F152908B4D
4E8EBD5E43D8C3F9C8525C205A6B5B4FD0E1F3B75412A6FF9E3BA39A22E1914F
93588D2FFE51E034E3675A29247BC9CCF86B1DFF07EA0FD9AF3CB12A8855A04A
0C27A6EEA75B314D9F320809FEF5189391EACA749E76D2F9F84F98DB9D32B2F2
6F7FF1B76585F43B9D1C3DAB3E3D1F7E6480C873F7D99BFB580F4481CBC0E5EC
84A3D9055FF8099210DCBE2A10B0317E211D0DBB815462B9B36B7068961025A7
3DDC800C45740A543AB3F5D165D628AF8BF48B36D3F45623D0AF7E21A589ECF7
3E8ABEC3C695947389952815B0D468A2B0DD850D9DC368F11E369C78285DE7AB
6AD928B3E2A2253044A3E2A49E610CE24780821FA175F76B17D3F7AB5CF2D281
44EBA7C810463195AB831A7546691D3A0F6A069F4E6D314E8D6EA2533E59A50D
5A626A2614DE37C79931AA119A97BAAE24BBF8775FC0153AEBA1B5C7C9E8F8B1
8B2113DE452A41D29E09903504ABAD42812FC3C2B9A4ABC8C43BFB1C56388F58
6D7C4B4CB28CB66E30B55571B502B7B27B7886F57773C206A7BD26098D79C8BF
28994732BC4FCEBC2476D7F3D2143BDA0FE1D250D11568D3145B52CAB08CD317
7BE81F9E65B25658B7FDF0E67F504572AB876DDC55AD4FFD646A4EA68797047D
46A90BC15F609D33C09B91024E411F7A3287C3620198ADB0771A108CA7C1D251
4E88030B08270A5CE240A11714415C94F75E935E18444E6ACE63AEB891C651BD
39C5EFE32BBBA1BABEF74EDCC36BF5027B5BDA8A553FA97A22F632768C672F8C
2FEA78C9F2032B77FCB087625EB61790772A3D011E9371886776A758FCAF40B6
5D20FD532B397C088EE6A5C9811BE9A18D8714B4201137AD918D2B15EE53D011
831D43F5C0093C7AD9BA1C6882C3967BCF681D18558667D025B86F6E7A4AA629
0A3A0214179BF811017E8C1D972F142BD02F510B7BED5BA08274C47F7CA6F9A2
565C497B973A31131FAC25006B8A7857ACE5F0257A53249617F3F4D9F5729FC7
C2509021179F4869DE18407AB99EEF38F110610C982A479732DB164809B8463A
7B79F436F6198CFE5D5F5C097192DC61B7806161F5487D1FEC7799AF34ECA15F
59697206D7CEC99A171A818A2AF47162F944EEDE6EB00B90B6C713679C228DD5
6BAB8807CEC8A8F7CE1AD1497CE2E1BB5DE4ED380A45323B24F840AA363C8C06
EC0F4D58005511B081AA3D9C20CFEE9B199E70D1933D533F440BB4B012FC1169
5E1FF86004C9D4A737987C619B25D36C594CCBD796BB156878A03BD83BA3490D
C53CCD1578D35A9F60E43610FC347EC8EFD265E0D271F30024C04806D87F3B7A
F8743014CED4BD492F7FA5C4D2D09AC4B8DC7F3B2D5D8DC929C750FBF2545CFC
1928184A31351E921D3CF3029125BF0C9739E0C10EF066E4C31201F240B5ABA0
7969AEF4ABB6B8C527BB94B0E6073C3860CE732C323E8822FAF960808FEA0E83
01E3E612A21448E0284190698E6D60A3B22134FCF961A2B71A965F649D4CF2C9
5782766697EF2CB78D16793E6D359178B20D5863571D2200EB2BE8915490905E
103B1C7EC406A19B34F18994C4D4E9504DAB1D6B24BCA0D3936230894C9BF2DE
E6C73E469000FBF31BAE9C1816FA0B06A6EEA6D79FFF5D0BEF08CA1B698814AB
D68B665716037A35F5744B226FC5C4FAA09DF4257E08B3998CB7E2D5A1D5C8F1
37286D7D788928166E154ACC1DEDCE6892F227BB8264FA4EC663FEFABE926573
E36D6030E98311F32551670943C851ACF8D98FD71A2B04084A993DEEA2033177
FB5570D2634BAE36F564F23F523D731B44E8D6A57771D5C3F76AF36A3DC41B8F
86BBCD28468E1F364DB99AC67FAB0813630C7EE7DC360C27BC1AF48C5BA43CCF
6B0D2F992A02EB0169A7E31FC8B9CD9158D755DC383667060CABC53339E8CDF1
0090EDF84AE5074560E362802E4ED352DD9CA6328B24D85A09D0A4DE7FFD5C9C
D58F66515CCD1A5503E8231BDC96381F2DCA3C3A531BEC3A1BF1C27F54D9D00A
EDB68071EC9CDDF89CE32FC26495221289D8DA5513ECDC7F1BE85811E78EE7E8
62E8A0D243FDF9B1362BA3A2DDF29C62A54D72DBE51C8C942FD085F9DFB52CAC
E234AE5F9323C03F9671B4329C4785097E3FC9E94C65619A5E11801C0B80C3F9
44CF3C1883B361111050958C69140F1F2C904EB607A4AE16B2CF0FD8A4F37069
9C8678DBEE75985736BD8E491D8F710C5FBBAB858FBFB1A9BAA6D66A675CC437
79681336205B50D5D9B2375219E2EE13D5D636636F0A6372AB444DCF037ABC9C
C5D4A11242C570171114330F66193FF13DC8FF6A17449C532FAE6ECCBEB28405
4E337BCC9F236C004ED09527921F579B7889B7DA8AFCA63728F479CDCD771622
9C666F3D2975A1A7BF18744CA83517860AB144541255936A4132A55F649C67ED
3D60DF79B093D58C17846DE284F5A1CA41DD1A493A88B3E8BDB15D32C5B35103
B8B0346C461FE03D435D01FFF15E7A613EACE41E72B21E93092C2359F2535FA1
D1A508FB5023D07D392FDDDE2AC74EFF86436194093E227746DE035B33FF9862
E3081AFC04E187A44BECE5C6C1E4B0358124B83444B94A006DCC63466B43EEF7
035544EB76199525FA7D80B4A7D80DA1BF10860EED4BF3E929DF288E1BB1BCCE
88D89ADE52E0E951D4B5C232674A9840F94B9CC170284FA71225B2B84B50716F
96B850D6FF61144F6A9E51CC1B8A86A35082DA5E6E8DC4F671A68F8B02EF2EF4
4976FF68DF0865B18B10CA2367C4A1234AA8AF985A3B1B3AF560AAD8F7A4C8E8
1CF29780690190D2E829323F3BA9F7ED7D399CE11A1BE5ACC76D12FCB66B4CE9
0406085978F8EAEEA93E04B90834C0501DA25AA2B872B756536736F4A79DAAC2
556087820D6BFC7BDEBB1F514D9469502241D4200BD22A95D2867ADB864CFE04
BD7CE687CBE94F30D93D5388087B8426C11094B687076CCD1432397FD2CDA86F
BF6580C629A7592A100393D1D676625619230543391533B46128E36279CAB171
2EE5536507B758FCDCAD0411202A2A069EAC5432D12D336AF026B23E55BD7B65
0929791697B0C4A6C89327F84018CAC0A22C38CF55E4DA7B15C0C2046F08C8E2
D93F0AF62704F47A954E60A024C046E5D1FF75F727D450E4D19C2518A52F480D
805D84330E3B0FDA064321595E0BC73FEAF133114E0F26603C03F6806CE36A12
7679DDE4627138D5BBB3830B6820671816DD8DFCFB5F3F5050DEA499563C0695
F55D235AE858A4F49A0F0E18CC64719981AF8EE6A59725C1CA3190E6DD3AD9BC
73D8EEA7DF0A9FE9FC017656DB2158956BA150EF1D29B35CA24FEA18998A06EE
909DE8C5040FE630E1FAFDB99DFF29348A9C0FF9DAA696FA9B3C3E63A7C4DAC9
07E3B5CB7A37135051AED9518E4DFEAB5DA339847235425AC5056E7AD9D2349C
605D6577A03DE99BB78A0AA1139DF5414824E7D04F710EBFBC14A70AEA561AAD
24BCF1576FB299C35E8576C37BBF8FBE60B6F7491BCC79E2531E1715A18BF846
3174B816F8896C4BB18C575AADC6F58867633981828D13124BC5C1902A3A3C19
35CE66C4007EDE6965BA42D8F7C5A7C97A82344F676958CBE764ECABE84ABED1
50C16F67E1795115AEA57B785862408C117DCC0D93D513E3E4F256ACF24698B7
252C22BE36764FE876B236547F681990EB86B8BF729B4B7467486C673EFC9F86
7CFA5CFC69581320883188517EB0289AFCCCABDAF19AA2F1F87D5F959E4CE06A
8B8F46297420FFE3156A9D060D4353F594FF122E7D757C046F8ACDBD504E5711
DBA26D56A15D0AE7379DB18B66F88795A54D46CAC86EF5508125DD1114DA1280
55C783D9CCBACC1626897057A64CDB15B160C3E2B275391CE3B80F2139403CE2
C137B6FAF796D9106A80199EEDB5321BFBF8466651A74EAA4CEEAEA98A090A0B
CCFC1D83DAA1E61D4CC2E95A8F8D553E7C7FE0E41CE5C9F792AAAC30DBEB7335
84203EFBBF997F0979A9764FFEE5A5EACCE12DFC18BBDB6FD96D53CEB809BCEB
184AF69F33B29A6383A5CDAB2CFB5B30B3566EB48440D16A80A981A63E7FF21E
598B73BD532DF4D9AFBC409178AE628092DB87D3DC9D80E7BC03A0FAFA64A7C5
FED819BEB1AADEB03239EA4B42BD9BDF1CFE6774250E026264EA6B1AFA339C51
1FCB552194CDACD36DB6FC331F8FB67C9AEE4C994CA6132AC03A25067F45B165
21AD0199BF61E0285EFD0764033929A8F36278575777299697480D55F74257D1
D3090901719F072158DF40AA7C78D128AF38AD35DAAB42E991655A4E858F0EA5
46C3A723A3FF1CEC65D4993F4705C65569101693F0D22636A00F432618538765
04BB7E3B39F2CDE81B5A0F4E79BA5B0A828281C82375B79E27634E06E3C4596A
E9DB308E70E59DE86300C9538BBB6CD8F3045080F87A9B60493B7BAA93960DB8
F8BE2F378B01080548802256FCDEA397215679D6645D0908A9F55EA0686478FF
AB506F871BF73B19A85F5837AE286EC255103118B7CF1F01D7391127468DD2BF
D7B792D6B88838D5FD26E7DFC291F8CD56E8D3510D3A2CC23672CBCE429D9BF8
7A7718DEA5EC767A2FBFC28BD78516122BF0758E8D4F8D7A0004B96725F2E3E8
4B8581A8928D31165AC87B9DD0A4DA6AE0BC05EEDC613C06CC01516779E3D9F4
82ADB2954E27C43C08B7B723B92B2A6409F576D090B1D0C287DF5CDBBA7C54B0
87E269F402D69794080B51C2433908B771FDDD8BB6A834A81FBFA86EEF600393
C29B6309CBB6AC06AFAB779904B0B9C29B559792B0549834B38B8346AC106AE3
CADC7BF0EBC7AB1AABD2C97F21F06D3BA316EB042A92A12B7D93D48765911753
0C6B84ACD4E309C2CF43AC62C6D8E2ADBB202A1D7C71D88037801580E5EB9AFF
E3CDCB3DDC0D9243253B8EC061E457BE5A2434DFE0D2621C9D7CADF037907ECD
8C2C64DF9C70FF7D7B0583AF9EB5C3E525CEEDCCCF39B1AF96475594B255256F
B30141D2358C0C3FDB112AC9DFE0970B8C306E43F508FAF36BA914AA3F32F9B6
E56E5F197E63111DFD6361D1E891AC5029C00ED45E924152468BD93CC6B1A357
FC088283CF25076695C7BB1CCD249A76684ACB7B27BF3FCC80491AF7B0E2E8FD
9EB0386CD07E3C275191016FDAC737AD536C22DD6A4FFD60328B01934675359F
0B98A3451ECC9C91531E7ED6C02676970C3D3859EFDDBEEE734E6983CFC01A38
6785AF00705637B59ACFDBCB9636F87661E31DEB1C28D62E8FAF998DABBAC613
F57F4C283A2132015FB886BEFDE72A15EACEDE8E051F5629676582272CB36DEC
39E216DE9975BDBD1A9E5CD55B5D3C7DD3C30C360D6392AE5B316D03816FFEE5
A405BD4F2AA2FE6498033D6A07185C5E1FAB8697972771B1B9335143AFFF59F8
1A1A215F70C5476E6812B04E79EA5E46313BAC147674F7891FC57DAF6553576D
CE2F0AB9A32BF31786EE174962CC2FF4C1FE80EC864BD27C42602DE88D830406
02CBA31F4D30D8E20908A5F74F60CFEF0D8776008BB329B24E516EE8C196D8D3
BAD86ADDA527712F3B29D99CA3AD5A8E918F4F12E413702D59D4D6A7E4B05054
BDB292B08AA6445BE86CDAAC4AFCFD03F420E1C5CB97BCBF22230695B0930864
81E9B825F8E0EAD4532ECA37D391F2C47E69ED7F804AB2F2FE5E1E688E56B73B
DA7CF3C2FF2524AC340F1BF025AFB76EBC9DA8471B6DBBCF648F267530492953
92D4BCA42EE972CD75F56C48EB1D2018D3CA561949BE705BA64D0073D71DC382
39130D7D111AFED4A8345DBF2093A2EAEB291C586AAA8300C8781645BD369669
97362672CF3330E070311E8A065B384058322317201053C9A032767CA7C9CFE6
7041AC405FEC646B3F63BC9194620F266808A66F777D6C2E033240C86703C443
F688E27F77E4B6B4BEA7BDA08CE82C71A263DF7E4E9CA14826CD35B64874D282
33E8C9D822721C1C8300CF3DF3C609E08D1E7C8AF1009260BFE14D102BFB7EB0
10278707F0A64522BD7E2812EE09C0C0A8AFFCBF849E80BE005C4875F6269DAE
FA9D404154CF36D4D2AB4D031A9327C9A6AD4DD73F7C9C77D990FECD2015B6C4
EDFD67014CC4FC6692AD937D7749BA9247E5C82BB404136F691BE1548F581EDB
42005CA9F588E29842C11A2C34A814CB1539C5717104A9E1DF811157227F649C
31A617C04E9D18CB3B45290FFEA05E25EFFE6A012D3E2CDE15CE86D577F28CF6
AF273E2E706A07D30B82BE410D67C00500DB58BF6CAEF2F465EBFD29D71C301C
C052361FC43BEEC3B6CF39CBFA4A4D1F31FE9AB579DC23B738C0D445FD999E8E
82DF888FE87DF764FC9808B5C18A99F6C648083763A26A1DDDA7CAC6068F0EA6
CD0C61901BFA6D2A983AA6B63CD820F0B8512F1D3D9B0CD227EE2303A5C78253
DBE5DFC27CBF40947D029B1F8E13F7B436E6C6222574AC6A0E2DB7B140BF7AE9
9A32AE4AC0A5959665E40FE323B5D929A9574C7A842ABBF6416255D3497B5CFA
2251752A5D2ECB44D71092A3CF5CFEB9D6E6BC42DF36B64C5E848E69D8C3D0EB
DD70BDB178BD19FED3E1C32DEED05E5A51F9322285541151DD890C64E3FF4684
8D2D050FDDD199DB0B94BC787C65C03E834C119C57A27B4A2734D8C8D42B893F
0F50D6A6652D78199CE42C3B5DBD9BD49263C9BE2B46CE4FD2AE42C10B29D79C
3731599CEF511954649DC5A7716FABFAF821529A4A803C46BD0D08AFFCC52A27
58AF0C1950512A6B5032DEC684341E89657C50E0792A7707649003F3C85D050D
45A3D3B37D69956B85CF10454C46126C37870FE2D2433ECA84D1B90015BCA1F6
A66FE00BDF6C0D272F7CCDC10B4EB24DD806496E1B22641C5F41D3DC8F1EA86F
7058C6F8646727BB5940074A6F0A936F0BC4F1FA01BA35CFDFCCFC1FA13D610E
F84E2044959B52477638057A503BABD3D119F2FBBA1555CF377ABE942E10B5A5
868BDBA063C52E8210D66EEBD468866CD0A2DC4267FC59DF65EF8DF55A87E42C
EA5CC6B22EDC09857D8B895C6A7B78691F43287B02614356923F2CDE5204D419
8A8CF9DC677D2EB63734A93F202D759582A5C8469B2F0DBDA22C19E6B0D713E5
5B5100A33E0287C97F0EA779CA58B890AA0FDD9AB5F420FA91E20ABF2002CF9B
B33BE4747AF13D03FB9AD77A764BF1C06150FA34116DDA8E09C64F40866B7871
6BE164AFCBF8F5E8A8BA1FA98489399842CE177252BD75130D0CE94E6B8E0488
16264EC608D2505321FCAAC73EF073A3E79BD126E40CDDF3E3623F58CD459FEE
18A0996BE44601C3A59D7E55C1EB712732510F66C677704371C387112B61E151
DFABC16D70AEDC290081F5AF1DA49A4CA04E9322D06E8CF7FAC4EA7A9C2593FB
4EA13ABF1008A5A4085AC081E8B58F2F29E13D50BD51757D6014F8CE4CCE2BE6
56B47B98145A91B0AD34828FC040BEBE637681F0542E2FDEEB6EB1B825E4FB7B
BDC76075EC678EFA6EF181D2F31388708639F10AB6E43EA7B75D2664789A30EA
B142B6AA7AE64DAAC2C171285C3F077459BF821B895B0628E3ADED0B030C38F8
0497F2232963F743EA291134883B119AF5FD664CBA6B68605E1AE35DBAD93F3B
4DFBB1F542FE72F93EF21AC34AF489E8AA5166AE1949C59B902274F12D3BCAE8
556F3E6DCEFBCA93CA87BCC2E7D74AC483742C70FA3243A16DA84EB17631B343
FD97985B676366052ACFF1937074D0BA13EA9040DA396EEC5F9A38844631997C
3D5F0F18F5FA0AFC4513877F34A587CCBA110616F1494D762429BA311F5C42FC
A58686F446A2D8975A2F8979E96167A0410F51CF4E726240B6AC45164EB96A72
FC35DC5F7FCED8FA108F98D08CC9B65D93D82E5CA5FDDAC1C7211943CAAD145B
7DA5CC5498E0531A528D42013AB037D4E3217CC6D2752CB20AF28E0146C50503
ABD48353CD9A91EB3D33DC9992D7AFF9727A632EDD25059DDD212DA1C59003CA
B5C7C5678810DFB4ED680ACECD2C0162B48D0E942B0B4380275401E97E90B519
1A711AB1696442C1772B1E56DDC3292DA14D6890884B0DBBA11F68B43E81CEDF
645833C2446E954F9BF3D475881E9B55A5C8E169DAA12A9E2C0897FA984A6B62
1186EA3F087121620FAB6BA79CE5E32BA82BF1C4AF8858588B2C199B9E2FC11D
EAFBC1433BCBF6334A59D6166FD21DB4B3854340A6B12870B7BFB9573A55C8C5
10A76C20821E97B04409E12435196D7DB9F10E372AB9E3262A8B07799AC649F3
BB841FCA4DB31CCA317B2A8C58103307B3E9EE0521B4BA891291BA22B1821EDC
5D18E50E82B7DA2EFB6851736B1B1CBF9FB8A5E579DEA9723D7E7552377B807C
681DE7CC6E27A938D1AD417C6212699F626EC021459DCD9EB3B1A03AC2F669D5
1C48781CD1960C1152D69B10DC5FB010FA0DE17B17F008EC7289246D873B7D79
D8A6732F39E4F8E0F5589B241B33ED47468B155810A7EC56CBC8F272E78DF348
CB842DC211959913B31A35791315A961A2660A507BE91B3F504B145343A2E2E2
F74D31A46CA6D1048480BABD34C7FDBB1A31F93FD66ADFEA5C9D69BABA431B11
583B793D4BBA380147E7CE15AF11BE3AFAD37360DDD9C61FB014680D72607D60
67F79CBFD95C2DF42E449AF80A6C5F19B14533BB5153E95A7FFE491CE23009C9
2F7ACA37C6BC2EDEF176D0570A8181C17181654056AA7E223D79B30B3924DF8B
BEE026305321D25B7BCA9BD1C752D179064AA0856AC7783E0C0CAC2A5A2F98EA
28F4521CD234579E613BE138C7B51927F41BA2CF98709197CF5260FEBEF22E8E
02DCF580B3E2EB676582D9E5B1FAD59A433F7BD21E0B290F4767CC57CC64AE89
0586B7AF242C55247336001F83702006D12A8A8C8C531A90EAD90E485EBFA48C
D79CFC3B63749F5E61F7F3270887F538851875F69090C70E59E0D2191CB6C4F2
F33B0E6D33E07187093F57A8FDBA6A692AE06558F001607F3971B5E645C82E92
F0AB311B6A769534E227B02D875496EBEEFD04ED8798272E9565648180E13E1E
BD949CA67D7D9BAD94F81543EBEA32B083FC1D1DD2D7EE4D2A36DEA661661E6F
3D41C362381F3C453D7E604E31EF8D3030E6F43B5D88010445F398E0903810C4
DBC53DBF06F7D24ACAB14C8D97
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: StandardSymL
%!PS-AdobeFont-1.0: StandardSymL 001.005
%%CreationDate: Thu Oct 21 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Standard Symbols L) readonly def
/FamilyName (Standard Symbols L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -229 def
/UnderlineThickness 46 def
end readonly def
/FontName /StandardSymL def
/PaintType 0 def
/WMode 0 def
/FontBBox {-180 -293 1090 1010} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 109 /mu put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA4706D91AF999C9244BA4C770
FE5B3485F083B758947E4EDACBB478E55F1EDA6FD43755F3819F9292072ADAED
FDA1ABB92842199CF874FD0D8A6429D69D5F1E8BB56FA51E0B0A12874786CC3B
1C24C9C608F40C7774946DE7D3EC6F234B793C9170E9678D19994D61A213FE29
925028E208DEBAE41C0BBCBFE69FF9920D5473AF395F9D07E27F7871953BCF83
0D8E781B183FAC31DAA08488CC639C348BCCB2FDEA9BF11CFC9CF589E0E5D912
9471AF733E09424A60685F4516C1BFC2912883835D495AFD44781CE0FCE03FD1
AEFD4190D530C243E82BACF9BBB7135AA21AC329BD25AFEB5284D0FEA70F0757
7047772298ABD77E1BC00DAA5CDC0B8C239EFAD8A783A1260C2C8114B1CEF1FB
FEEAE79B4EC33824BA74E4BEA34BA26730DC2B90DDA59868D0D53327118E0A9C
CF307F710DEBD7CE9A7888FE9B339E1561B4B83F838F8D9C615054192F4B8452
5908F8BAA5220EE28F4222C1FA5A97DB983BCF9F584866482CA7EC79A4AC1199
8E071F5260F6478E070D0EB84A342890283F5B5640CF3C44AA2A1724F5F09186
1086C71F7953533AC56D6265200EAB54BBF0FEF8154EC13229A8B2AF4E6F4449
04A576D348562D512556AF95293C7D115FCAD4853FE394BEE62A4A50E356EAA8
868DB37F4D663F183246F037704841181AA9648587A09E8BD044DCEF584652ED
F29680F41DC6D30C3B87448482F45C08D4E0EF8B8C63299CD53BE211B10C9B5C
28A65E998DE002C96396BA0413FC30097DDAE8237E4A34D9C413472B2EA38F17
3D29C443DC03930F36B48779449BAC308C6F43FE6CAC50C3314D6CF5FABC872B
B7CBADDD96379AAF85834398C2937AF2B1EEA58832DD7CF5C1E29104673FFF05
318CC3F90635CEE5E03D4910567FB7EF2CEA3DD949FFDBC1EB5419A9DD28A255
4BEFDC96EA8DABAB0AC230DCB02818AF9A164918DEA34758E0403DE294B3EE43
660E70D22D1F9F4F865B7E3D72C2097C761C40DBE2A9AD81F7002A27F2EDE345
9E49C2745514B56F8E0190FD4FA2A0A6266B9A9511819D1F2E0F341CD443E0F9
0CC36D65565B2A317094CFE27D918F5DCC127C76FF82E579A06D8A3A32345880
8BAD0F4E3F553934AE1CDEF29DE336B98C4ADD7F99BFF30C1D2EBBC1F3A14197
89198116202901B611D9294AA70086A115AE8AF7EA9C371BCE407C96840957E3
6A2008ADCA2CA74B5DAFA70C389BA8798B3CB383E4249E0919ADB799ACF71160
7ADA252DE7CDF57750DE134D16257E6989B76A91534C2564B0516C18C9EB0B1A
FE05A789CBE20DEC1DA560FCE287B86E393C824960DC43AB01B45966A9F6C2FD
A093CC4A456136B6AD2D692388534B0E643A05643E8A83038029E832F016A7FE
7F789B1C40AA9FECEE64779D73DC383C3E0FCD9101CC384C1488C4D37BF9F6EC
90F8B81FDEA7E93EE59CBD06497B40B6CE001EB5EE7A9F636F046CC24897AC3A
4A4B69B9262BEA8D983F72A8D5856E38EB16AF71A4A32B801E4AF89319F6B0B5
F32883144D56858DB62E818C0A197A853688E3AA3162E6138192E19652A23D58
DC33153C408ED9FDB7A1BAFF2F1602E398D58C69E40B6E071D6710FD81A5C59D
0F9224DA14A90F1691C479F86CD53E8CC9DE6B2DDB148E81B1F6B9E2B7C36C32
33AC20FADB3505BE2B8C29DB3630B72D102B8AF55D093AF2E3567278BCA1B75F
439B211312359A01B9D77727D38B9EE253F31B94C9AF9270C53B5EA44411BE39
9A1EFFE6AA02EBE529146BB9E0D14D1666A9EE3D37E8641DE801976EA3C2E3D3
26612EBF7276BB95045A7372EB87999E94BB52F8168D7B194D57EC6530162460
848153C749EF0DE6EC83878CE9C3969F827B2A28BD444DD1B0EFDAF667A91817
1169D86699C9AAAA8A72683C54B45F81F355D9D19496D0F80472B6D96E9F2E80
2299F67905281285F890FF78C7D0BE2125C767B37870CB666228744DB62F3258
8C5AA6C0219CF0E5ECDD3E91D91C57D820782A64C6A5A83CCCEFA5F6F52CE034
308E42C75983C5751E8D91AB6EED5B8A6E4DD06DE6407F57CBB23C12F76D3135
35879DA64FA8A2E3CD644234BA7F77FA96C0CBFBE7368359D2353672BBA626F6
A2103DAE69DB0BEBD21CC1E3CCC89BF0809008377D1D0CFDB4FB1128BB005614
7539D836FA1D609E7154612ECA41BE849D5BE1C72A07FECB4F40957EDF2170A6
E9FE56A43E47AC70F7D09EB87FA949FBA6FD194B269A119362353847D6E44E14
083FDD171EA303D2AFD535AA7EF60E005C6CE09C4F04BE23B7AA1DD413D12D9B
F1AC6B0B50AF45D75D8FAAFE386ED471EF229009DB3DB9A359FA47A0B75CD846
6A341255CB331AF4E1587C84F476966FA4CC8348DAD1B0E321CD4DAA7929B044
9BCC4612C47E3D3651D7D6E0C31A4A2589D16A0651774EF04FEEF4D27ACA13CB
72F6ED429DF7B054909D165AC58C5523A0DA508D49CFB93F6F721F708FB28C04
50
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 165770035 89989444 1000 600 600
(C:\Users\rakes\.matplotlib\tex.cache\d5\3b\d53bb522e608ee69cd09035e0ac8855c.dvi)
@start /Fa 146[452 52[291 1[291 1[291 1[291 1[291 48[{
 TeXBase1Encoding ReEncodeFont }6 581.154 /NimbusRomNo9L-Regu
rf /Fb 146[430 109[{ .167 SlantFont }1 747.198 /StandardSymL
rf /Fc 204[276 276 276 276 48[{ TeXBase1Encoding ReEncodeFont }4
552.931 /NimbusRomNo9L-Regu rf /Fe 133[332 374 3[374
2[249 374 2[374 8[332 374 332 1[332 13[415 2[415 3[457
3[539 1[415 3[498 9[374 1[374 1[374 1[374 374 374 208
5[249 249 40[{ TeXBase1Encoding ReEncodeFont }25 747.198
/NimbusRomNo9L-Regu rf /Fg 139[23 32 28 1[42 1[42 65
23 4[42 28 37 1[37 1[37 13[46 2[46 80[{ TeXBase1Encoding ReEncodeFont }
14 83.022 /NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 10800 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate

-600 10800 a -600 10800 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 90.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
0.000000]](psmarker14)[[14(bl)1 0.000000]](psmarker15)[[15(bl)1 0.000000]]16
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 10800 a @beginspecial
0 @llx 0 @lly 2520 @urx 1368 @ury 25200 @rwi @clip @setspecial
%%BeginDocument: C:/Users/rakes/AppData/Local/Temp/tmprykfgi_c/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: Comparison_of_flow_noise_3D_different_dia.eps
%%Creator: Matplotlib v3.7.3, https://matplotlib.org/
%%CreationDate: Wed Oct 30 13:34:01 2024
%%BoundingBox: 0 0 2520 1368
%%HiResBoundingBox: 0.000000 0.000000 2520.000000 1368.000000
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
2520 1368 0 0 clipbox
gsave
0 0 m
2520 0 l
2520 1368 l
0 1368 l
cl
1.000 setgray
fill
grestore
gsave
254.323021 181.405346 m
2448.580201 181.405346 l
2448.580201 1358 l
254.323021 1358 l
cl
1.000 setgray
fill
grestore
0.800 setlinewidth
1 setlinejoin
2 setlinecap
[] 0 setdash
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 181.405346 m
254.323021 1358 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 181.405 o
grestore
gsave
192.903 112.986 moveto
(psmarker0)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
985.742081 181.405346 m
985.742081 1358 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
985.742 181.405 o
grestore
gsave
924.322 112.986 moveto
(psmarker1)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1717.161141 181.405346 m
1717.161141 1358 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1717.16 181.405 o
grestore
gsave
1655.741 112.986 moveto
(psmarker2)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2448.580201 181.405346 m
2448.580201 1358 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2448.58 181.405 o
grestore
gsave
2387.16 112.986 moveto
(psmarker3)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
474.502098 181.405346 m
474.502098 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
474.502 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
603.298601 181.405346 m
603.298601 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
603.299 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
694.681174 181.405346 m
694.681174 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
694.681 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
765.563005 181.405346 m
765.563005 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
765.563 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
823.477677 181.405346 m
823.477677 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
823.478 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
872.443835 181.405346 m
872.443835 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
872.444 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
914.860251 181.405346 m
914.860251 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
914.86 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
952.27418 181.405346 m
952.27418 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
952.274 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1205.921158 181.405346 m
1205.921158 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1205.92 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1334.717661 181.405346 m
1334.717661 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1334.72 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1426.100234 181.405346 m
1426.100234 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1426.1 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1496.982065 181.405346 m
1496.982065 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1496.98 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1554.896737 181.405346 m
1554.896737 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1554.9 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1603.862895 181.405346 m
1603.862895 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1603.86 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1646.27931 181.405346 m
1646.27931 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1646.28 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1683.69324 181.405346 m
1683.69324 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1683.69 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
1937.340217 181.405346 m
1937.340217 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1937.34 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2066.13672 181.405346 m
2066.13672 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2066.14 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2157.519294 181.405346 m
2157.519294 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2157.52 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2228.401124 181.405346 m
2228.401124 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2228.4 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2286.315797 181.405346 m
2286.315797 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2286.32 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2335.281955 181.405346 m
2335.281955 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2335.28 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2377.69837 181.405346 m
2377.69837 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2377.7 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
2415.1123 181.405346 m
2415.1123 1358 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2415.11 181.405 o
grestore
gsave
1069.55 10 moveto
(psmarker4)
show
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 181.405346 m
2448.580201 181.405346 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 181.405 o
grestore
gsave
202.491 150.382 moveto
(psmarker5)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 395.331647 m
2448.580201 395.331647 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 395.332 o
grestore
gsave
157.659 364.308 moveto
(psmarker6)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 609.257948 m
2448.580201 609.257948 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 609.258 o
grestore
gsave
157.659 578.235 moveto
(psmarker7)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 823.184248 m
2448.580201 823.184248 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 823.184 o
grestore
gsave
157.659 792.161 moveto
(psmarker8)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 1037.110549 m
2448.580201 1037.110549 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 1037.11 o
grestore
gsave
157.659 1006.087 moveto
(psmarker9)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1176.595 254.323 181.405 clipbox
254.323021 1251.03685 m
2448.580201 1251.03685 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 1251.04 o
grestore
gsave
112.827 1220.014 moveto
(psmarker10)
show
grestore
gsave
87.533 341.716 moveto
(psmarker11)
show
grestore
8.000 setlinewidth
2 setlinecap
gsave
2194.257 1176.595 254.323 181.405 clipbox
457.153517 1143.127494 m
475.592653 1139.379234 l
494.031789 1132.595827 l
512.470925 1137.845067 l
549.349197 1133.500482 l
567.788333 1130.419195 l
586.227469 1128.443333 l
604.666605 1131.197188 l
623.105741 1135.841555 l
641.544877 1140.52924 l
659.984013 1137.184011 l
678.423149 1136.660236 l
696.862284 1138.948796 l
715.30142 1138.792882 l
752.179692 1137.469882 l
770.618828 1148.139226 l
789.057964 1148.348547 l
807.4971 1153.079529 l
825.936236 1149.197652 l
844.375372 1147.345904 l
881.253644 1144.371186 l
899.69278 1144.701518 l
918.131916 1144.89533 l
936.571052 1143.012363 l
955.010188 1144.205268 l
973.449324 1144.87279 l
991.88846 1146.472763 l
1010.327596 1145.832825 l
1028.766732 1144.385427 l
1047.205868 1147.379601 l
1065.645004 1147.724544 l
1084.08414 1147.727348 l
1102.523276 1149.014409 l
1120.962412 1146.168411 l
1139.401548 1144.589183 l
1157.840683 1139.016713 l
1176.279819 1138.072991 l
1194.718955 1127.831327 l
1213.158091 1127.780338 l
1231.597227 1122.425097 l
1250.036363 1121.464163 l
1268.475499 1114.830138 l
1286.914635 1114.227413 l
1305.353771 1111.863374 l
1323.792907 1106.52055 l
1360.671179 1102.109396 l
1379.110315 1097.157196 l
1397.549451 1087.630473 l
1415.988587 1076.107117 l
1452.866859 1065.57344 l
1471.305995 1060.285435 l
1489.745131 1047.100297 l
1508.184267 1035.933376 l
1526.623403 1023.243082 l
1545.062539 1006.487228 l
1563.501675 994.843263 l
1581.940811 982.894951 l
1600.379947 972.243154 l
1618.819082 963.924565 l
1637.258218 957.172729 l
1655.697354 945.216495 l
1674.13649 935.124568 l
1692.575626 926.491702 l
1711.014762 915.591969 l
1729.453898 901.737683 l
1747.893034 893.191067 l
1766.33217 882.828751 l
1784.771306 868.518674 l
1803.210442 853.86808 l
1821.649578 837.707628 l
1840.088714 825.98693 l
1858.52785 812.438439 l
1876.966986 795.947286 l
1895.406122 781.313719 l
1913.845258 768.709614 l
1932.284394 754.911927 l
1950.72353 740.580627 l
1969.162666 726.442797 l
1987.601802 718.71997 l
2006.040938 709.551563 l
2024.480074 698.785321 l
2042.91921 686.553466 l
2061.358345 677.074244 l
2079.797481 667.287339 l
2098.236617 656.426513 l
2116.675753 647.123423 l
2135.114889 640.818573 l
2153.554025 632.006969 l
2171.993161 625.741136 l
2190.432297 616.41446 l
2208.871433 607.182354 l
2227.310569 603.501276 l
2245.749705 597.098537 l
2264.188841 590.502658 l
2282.627977 583.41212 l
2301.067113 577.786387 l
2319.506249 572.852611 l
2337.945385 566.845322 l
2356.384521 561.957074 l
2374.823657 560.452504 l
2393.262793 556.512949 l
2411.701929 552.594627 l
2430.141065 543.957891 l
2448.580201 538.086896 l
stroke
grestore
0 setlinecap
[8 13.2] 0 setdash
gsave
2194.257 1176.595 254.323 181.405 clipbox
438.714381 1146.933807 m
457.153517 1144.376863 l
475.592653 1141.518695 l
494.031789 1141.268041 l
512.470925 1151.469559 l
530.910061 1155.613198 l
549.349197 1149.387401 l
567.788333 1151.933449 l
586.227469 1155.157699 l
604.666605 1154.034612 l
623.105741 1155.207111 l
641.544877 1155.337566 l
659.984013 1150.538425 l
678.423149 1148.384231 l
696.862284 1151.044842 l
715.30142 1140.714266 l
733.740556 1141.230493 l
752.179692 1147.761812 l
770.618828 1146.234101 l
789.057964 1146.079875 l
807.4971 1143.734508 l
825.936236 1149.914878 l
844.375372 1155.836437 l
862.814508 1164.511893 l
881.253644 1161.622909 l
899.69278 1160.30734 l
918.131916 1163.295919 l
936.571052 1165.932383 l
955.010188 1165.122445 l
973.449324 1167.663969 l
991.88846 1165.764704 l
1010.327596 1169.171826 l
1028.766732 1166.436017 l
1047.205868 1164.069253 l
1065.645004 1160.866059 l
1084.08414 1168.608688 l
1102.523276 1164.190581 l
1120.962412 1160.160402 l
1139.401548 1152.343938 l
1157.840683 1151.949213 l
1176.279819 1149.015646 l
1194.718955 1144.103783 l
1213.158091 1133.761414 l
1231.597227 1128.555321 l
1250.036363 1122.665105 l
1268.475499 1117.295204 l
1286.914635 1104.182728 l
1305.353771 1096.098339 l
1323.792907 1086.616832 l
1342.232043 1083.458245 l
1360.671179 1068.982421 l
1379.110315 1052.597845 l
1397.549451 1039.753085 l
1415.988587 1031.003337 l
1434.427723 1016.136939 l
1452.866859 1001.268459 l
1471.305995 986.825909 l
1489.745131 974.617969 l
1508.184267 960.86839 l
1526.623403 949.017662 l
1545.062539 928.768683 l
1563.501675 914.119173 l
1581.940811 905.920375 l
1600.379947 891.104553 l
1618.819082 877.052565 l
1637.258218 860.173488 l
1655.697354 843.466805 l
1674.13649 827.303878 l
1692.575626 810.786038 l
1711.014762 797.452886 l
1729.453898 781.950495 l
1747.893034 770.37501 l
1766.33217 756.249719 l
1784.771306 741.60678 l
1803.210442 728.516187 l
1821.649578 715.859861 l
1840.088714 703.83445 l
1858.52785 692.439185 l
1876.966986 679.439402 l
1895.406122 668.381797 l
1913.845258 655.908703 l
1932.284394 647.677136 l
1950.72353 636.059144 l
1969.162666 626.400826 l
1987.601802 616.777379 l
2006.040938 608.04237 l
2024.480074 599.380556 l
2042.91921 590.727623 l
2061.358345 582.531623 l
2079.797481 574.773748 l
2098.236617 567.531678 l
2116.675753 559.71334 l
2135.114889 550.711082 l
2153.554025 545.819766 l
2171.993161 541.622233 l
2190.432297 537.208047 l
2208.871433 530.580157 l
2227.310569 522.614275 l
2245.749705 517.483976 l
2264.188841 513.582182 l
2282.627977 508.660817 l
2301.067113 502.417811 l
2319.506249 498.774261 l
2337.945385 494.381741 l
2356.384521 490.883702 l
2374.823657 483.476034 l
2393.262793 477.197778 l
2411.701929 471.913738 l
2430.141065 467.153035 l
2448.580201 464.122336 l
stroke
grestore
[29.6 12.8] 0 setdash
gsave
2194.257 1176.595 254.323 181.405 clipbox
457.153517 1157.702908 m
475.592653 1155.432988 l
494.031789 1155.789329 l
512.470925 1155.423434 l
530.910061 1161.677967 l
549.349197 1164.547331 l
567.788333 1163.531921 l
586.227469 1165.739993 l
604.666605 1168.336455 l
623.105741 1169.756595 l
641.544877 1173.469885 l
659.984013 1163.769656 l
678.423149 1158.4941 l
696.862284 1160.747161 l
715.30142 1160.116996 l
733.740556 1154.568799 l
752.179692 1159.151198 l
770.618828 1157.683189 l
807.4971 1155.739588 l
825.936236 1152.151828 l
844.375372 1152.131105 l
862.814508 1148.385508 l
881.253644 1146.715768 l
899.69278 1144.608669 l
918.131916 1143.050263 l
936.571052 1141.539219 l
955.010188 1139.114417 l
991.88846 1133.442098 l
1010.327596 1136.579592 l
1028.766732 1142.275022 l
1047.205868 1145.95862 l
1065.645004 1148.493559 l
1084.08414 1151.749653 l
1102.523276 1148.646877 l
1120.962412 1150.481547 l
1139.401548 1144.837526 l
1157.840683 1142.191659 l
1176.279819 1140.858115 l
1194.718955 1136.441955 l
1213.158091 1131.011643 l
1231.597227 1120.503475 l
1250.036363 1111.131294 l
1268.475499 1097.251552 l
1305.353771 1078.3635 l
1323.792907 1067.486774 l
1342.232043 1050.397841 l
1360.671179 1036.707444 l
1379.110315 1018.48705 l
1397.549451 1002.438177 l
1415.988587 981.995297 l
1434.427723 961.742571 l
1452.866859 940.667111 l
1471.305995 919.632466 l
1489.745131 901.206426 l
1508.184267 887.100952 l
1526.623403 871.14498 l
1545.062539 857.774022 l
1563.501675 843.288914 l
1581.940811 829.803012 l
1600.379947 810.649709 l
1618.819082 798.63337 l
1637.258218 782.644013 l
1655.697354 771.196126 l
1674.13649 755.242622 l
1692.575626 739.381419 l
1711.014762 723.310308 l
1729.453898 709.816642 l
1747.893034 695.172538 l
1766.33217 681.127292 l
1784.771306 668.137742 l
1803.210442 656.902923 l
1821.649578 644.598108 l
1840.088714 635.818292 l
1858.52785 623.183991 l
1876.966986 613.447045 l
1895.406122 604.301644 l
1913.845258 597.932336 l
1932.284394 589.88251 l
1950.72353 583.039227 l
1969.162666 573.537036 l
1987.601802 570.806866 l
2006.040938 567.271588 l
2024.480074 561.605828 l
2042.91921 560.097714 l
2061.358345 554.708254 l
2079.797481 550.033261 l
2098.236617 543.029298 l
2116.675753 533.661671 l
2135.114889 528.418171 l
2153.554025 520.153913 l
2171.993161 518.632355 l
2190.432297 507.183001 l
2208.871433 499.987399 l
2227.310569 494.621081 l
2245.749705 483.866514 l
2264.188841 477.279166 l
2282.627977 470.547827 l
2301.067113 466.969016 l
2319.506249 465.513755 l
2337.945385 457.398467 l
2356.384521 453.542152 l
2374.823657 445.995782 l
2393.262793 441.879808 l
2411.701929 436.35214 l
2430.141065 433.447898 l
2448.580201 426.659458 l
stroke
grestore
[51.2 12.8 8 12.8] 0 setdash
gsave
2194.257 1176.595 254.323 181.405 clipbox
438.714381 1147.770574 m
457.153517 1145.735577 l
475.592653 1141.856269 l
494.031789 1140.653618 l
512.470925 1144.75651 l
530.910061 1144.937263 l
549.349197 1140.948891 l
567.788333 1149.907793 l
586.227469 1150.564141 l
604.666605 1152.649743 l
623.105741 1153.398939 l
641.544877 1152.668127 l
659.984013 1148.662976 l
678.423149 1145.79583 l
696.862284 1149.715361 l
715.30142 1147.299281 l
733.740556 1147.053969 l
752.179692 1149.714477 l
770.618828 1144.548488 l
789.057964 1146.854081 l
807.4971 1145.686523 l
825.936236 1150.753286 l
844.375372 1149.767538 l
862.814508 1156.250542 l
881.253644 1159.877948 l
899.69278 1154.604958 l
918.131916 1158.508144 l
936.571052 1160.921417 l
955.010188 1159.034899 l
973.449324 1156.99296 l
991.88846 1151.351439 l
1010.327596 1148.755773 l
1028.766732 1136.761352 l
1047.205868 1133.363513 l
1065.645004 1129.093416 l
1084.08414 1130.114662 l
1102.523276 1123.90311 l
1120.962412 1112.675501 l
1139.401548 1099.972654 l
1157.840683 1092.360222 l
1176.279819 1086.381308 l
1194.718955 1077.944229 l
1213.158091 1064.880397 l
1231.597227 1057.357386 l
1250.036363 1047.694532 l
1268.475499 1037.126365 l
1286.914635 1021.810365 l
1305.353771 1009.925698 l
1323.792907 998.657119 l
1342.232043 985.278185 l
1360.671179 970.042614 l
1379.110315 950.381427 l
1397.549451 934.865586 l
1415.988587 922.984813 l
1434.427723 904.531502 l
1452.866859 886.970285 l
1471.305995 869.750966 l
1489.745131 851.306633 l
1508.184267 836.674279 l
1526.623403 818.654656 l
1545.062539 802.413941 l
1563.501675 784.336058 l
1581.940811 772.524996 l
1600.379947 757.943002 l
1618.819082 743.323689 l
1637.258218 728.326773 l
1655.697354 710.486677 l
1674.13649 693.709361 l
1692.575626 682.863919 l
1711.014762 671.898568 l
1729.453898 658.520739 l
1747.893034 646.082296 l
1766.33217 634.373815 l
1784.771306 623.109058 l
1803.210442 611.140945 l
1821.649578 600.51077 l
1840.088714 593.912178 l
1858.52785 585.572083 l
1876.966986 576.533303 l
1895.406122 564.866435 l
1913.845258 555.144389 l
1932.284394 548.474997 l
1950.72353 542.50795 l
1969.162666 535.896487 l
1987.601802 528.85556 l
2006.040938 520.97749 l
2024.480074 514.946777 l
2042.91921 506.289965 l
2061.358345 502.328665 l
2079.797481 496.204852 l
2098.236617 490.577968 l
2116.675753 488.884192 l
2135.114889 483.297824 l
2153.554025 477.602603 l
2171.993161 473.099871 l
2190.432297 465.290933 l
2208.871433 459.281305 l
2227.310569 453.517821 l
2245.749705 449.994504 l
2264.188841 440.803506 l
2282.627977 435.019886 l
2301.067113 430.568258 l
2319.506249 421.610297 l
2337.945385 413.975566 l
2356.384521 408.089232 l
2374.823657 402.719901 l
2393.262793 398.751655 l
2411.701929 394.877397 l
2430.141065 391.471713 l
2448.580201 385.546228 l
stroke
grestore
0.800 setlinewidth
0 setlinejoin
2 setlinecap
[] 0 setdash
gsave
254.323021 181.405346 m
254.323021 1358 l
stroke
grestore
gsave
2448.580201 181.405346 m
2448.580201 1358 l
stroke
grestore
gsave
254.323021 181.405346 m
2448.580201 181.405346 l
stroke
grestore
gsave
254.323021 1358 m
2448.580201 1358 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
1979.895379 905.608791 m
2399.580201 905.608791 l
2408.913534 905.608791 2413.580201 910.275458 2413.580201 919.608791 c
2413.580201 1309 l
2413.580201 1318.333333 2408.913534 1323 2399.580201 1323 c
1979.895379 1323 l
1970.562045 1323 1965.895379 1318.333333 1965.895379 1309 c
1965.895379 919.608791 l
1965.895379 910.275458 1970.562045 905.608791 1979.895379 905.608791 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
8.000 setlinewidth
1 setlinejoin
2 setlinecap
0.000 setgray
gsave
1993.895379 1270.5 m
2063.895379 1270.5 l
2133.895379 1270.5 l
stroke
grestore
gsave
2189.895 1245.512 moveto
(psmarker12)
show
grestore
0 setlinecap
[8 13.2] 0 setdash
gsave
1993.895379 1171.402198 m
2063.895379 1171.402198 l
2133.895379 1171.402198 l
stroke
grestore
gsave
2189.895 1146.414 moveto
(psmarker13)
show
grestore
[29.6 12.8] 0 setdash
gsave
1993.895379 1072.304396 m
2063.895379 1072.304396 l
2133.895379 1072.304396 l
stroke
grestore
gsave
2189.895 1047.316 moveto
(psmarker14)
show
grestore
[51.2 12.8 8 12.8] 0 setdash
gsave
1993.895379 973.206593 m
2063.895379 973.206593 l
2133.895379 973.206593 l
stroke
grestore
gsave
2189.895 948.218 moveto
(psmarker15)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 10800 a
 /End PSfrag
 -600 10800 a -600 1787 a
 /Hide PSfrag
 -600
1787 a -1285 1844 a Fg(PSfrag)20 b(replacements)p -1285
1875 685 4 v -600 1878 a
 /Unhide PSfrag
 -600 1878 a -1628 2539 a
  {
 -1628
2539 a Black 0.000 0.000 0.000 TeXcolorrgb -12 x Fe(10)-880
2257 y Fc(0)p Black Black -1628 2539 a
  } 0/Place PSfrag
 -1628 2539 a -1628
3200 a
  {
 -1628 3200 a Black 0.000 0.000 0.000 TeXcolorrgb
-12 x Fe(10)-880 2918 y Fc(1)p Black Black -1628 3200
a
  } 1/Place PSfrag
 -1628 3200 a -1628 3861 a
  {
 -1628 3861 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(10)-880 3579 y Fc(2)p Black Black
-1628 3861 a
  } 2/Place PSfrag
 -1628 3861 a -1628 4522 a
  {
 -1628 4522 a Black
0.000 0.000 0.000 TeXcolorrgb -12 x Fe(10)-880 4240 y
Fc(3)p Black Black -1628 4522 a
  } 3/Place PSfrag
 -1628 4522 a -5298 5202
a
  {
 -5298 5202 a Black 0.000 0.000 0.000 TeXcolorrgb -162
x Fe(Frequenc)-11 b(y)184 b(\(Hz\))p Black Black -5298
5202 a
  } 4/Place PSfrag
 -5298 5202 a -974 5722 a
  {
 -974 5722 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(0)p Black Black -974 5722 a
  } 5/Place PSfrag
 -974
5722 a -1347 6242 a
  {
 -1347 6242 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(20)p Black Black -1347 6242 a
  } 6/Place PSfrag
 -1347
6242 a -1347 6761 a
  {
 -1347 6761 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(40)p Black Black -1347 6761 a
  } 7/Place PSfrag
 -1347
6761 a -1347 7291 a
  {
 -1347 7291 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(60)p Black Black -1347 7291 a
  } 8/Place PSfrag
 -1347
7291 a -1347 7811 a
  {
 -1347 7811 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(80)p Black Black -1347 7811 a
  } 9/Place PSfrag
 -1347
7811 a -1721 8331 a
  {
 -1721 8331 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(100)p Black Black -1721 8331 a
  } 10/Place PSfrag
 -1721
8331 a -7378 9149 a
  {
 -7378 9149 a Black 0.000 0.000 0.000
TeXcolorrgb -169 x Fe(SPL)j(\(dB)g(re)f(1)19 b Fb(m)62
b Fe(P)-11 b(a)-2208 8709 y Fc(2)-1928 8980 y Fe(/Hz\))p
Black Black -7378 9149 a
  } 11/Place PSfrag
 -7378 9149 a -2231 9562 a
  {
 -2231
9562 a Black 0.000 0.000 0.000 TeXcolorrgb -8 x Fa(20)145
b(mm)p Black Black -2231 9562 a
  } 12/Place PSfrag
 -2231 9562 a -2231 9974
a
  {
 -2231 9974 a Black 0.000 0.000 0.000 TeXcolorrgb -8
x Fa(40)g(mm)p Black Black -2231 9974 a
  } 13/Place PSfrag
 -2231 9974 a
-2231 10387 a
  {
 -2231 10387 a Black 0.000 0.000 0.000 TeXcolorrgb
-8 x Fa(60)g(mm)p Black Black -2231 10387 a
  } 14/Place PSfrag
 -2231 10387
a -2231 10800 a
  {
 -2231 10800 a Black 0.000 0.000 0.000
TeXcolorrgb -8 x Fa(80)g(mm)p Black Black -2231 10800
a
  } 15/Place PSfrag
 -2231 10800 a 20400 10800 a
 currentpoint grestore moveto
 20400 10800 a Black Black
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
