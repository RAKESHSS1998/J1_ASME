%!PS-Adobe-2.0
%%Creator: dvips(k) 2024.1 (TeX Live 2024)  Copyright 2024 Radical Eye Software
%%Title: db3831233505785866fc1bb51c53ac1c.dvi
%%CreationDate: Tue Oct 29 05:41:22 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 2520 1368
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\rakes\AppData\Local\Temp\tmpm_x1di8l\tmp.ps
%+ C:\Users\rakes\.matplotlib\tex.cache\db\38\db3831233505785866fc1bb51c53ac1c.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.10.29:1111
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2024 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEE930F8B6DC1CD18BC6A0E21
355FA63BF735DE357816B8A4120A6335817ABD0A0BCC4B6970B2C343CA865AC1
D5E0E6E79F86DFBA8176C5EF654243DDF5DCBACC2CB86200E811E0CA2E52A0EB
3920745092804554D23C10F87A34B08DEA1708E447E0C55794077222B339700C
A504A8DCE78D2BDC07CED8F417541FB6E7332443F0FE0AB0E8775B76CC3B68A5
D173DB74E88971C070FBFBFC3330074F247AD44BF4C4707698B53491C9E0E153
3A71AAB76AC6E3E4EFC38392343E3904BDBDB38FDA1BB4AA5897848E7033DAB6
D2D40D7954EB8B0A44BED68ADBDEF33B74E344E2A6EB357AEDB9BEBCA653C9A4
6FC558F650999A49BE3E567B225E7359245BD5AA1A57DC0E956ADC19E19CA5DF
2F8CDDAB6B9C8810A52BC5F9674D286FD002DFA5BB3132AB203D050264171EB8
57E3777A3403B563AA12FD215872715967549F665E4D31FA89D07F9F7B71A984
195B37D993CCC2992E4434D1B356BD56EDF5FA021AD6731FC67E56D594B8DC36
81D1762E66BB265F6FAAFF5186A7AB03ECCC79A923BBBD362B788F5C9DD7735A
48BE728AAB48D8D37D238A935D5742BE83214E06770BA127BD4B9E4F5EC52314
B25837FD118062685D20EAB378DC015F3AC6510DCCC4687B7EC4B6153D8E6744
3C33B97B28C87C6082D9E03E2570951103F75E168059DCDD7D5FFECB83EA16BF
C72CAFAED1EB8267138292F2F3BD650E492ECA67D539F5618E25570478C654F9
3676CD7156CC449C1204FFDA4D2FC79A2A452E920B0B254F0B2DBC4988686B65
B808CFCC21F2720EEC06C030DC43B2245F9D24D31A31F06EBC6577C65F098EE9
28C73D0E6F2B209BA791971918903CED36B7A87BD744C9ABFCD095A1AC391190
42250841275CACAD876062C19E602D59051084611A3B681657DABB523B779BC4
D7F91C2EE9BCF6C00686953E72BE4807BA88A85AC10B416938CBE9D36EB79E5D
CB58FE5C0A550EE1CFED8900E536732A2D6D8EC2BAA26CA7D5D273EB6C5E74C8
B10177892939C314427E68E1182B6ACAC03E725CABF73E2B90F6862828DA16B2
3D7D892ED892056859EDE60BCCDC2DF3DEB976B0A733A0270539C4A27AA47513
ECD15752E9230D337ED151FDA3CE08C405D9D24D140EF12D25FF5306A4156D51
D28B705C8B2C2F9C9CDD65DDA1BD428D4A729BA0AAF5153266EA51643BAD8CBD
DB897498E63C930F221D94F278311534761CC5B653C05A0148445B78190C1FEA
437E7919237C11E486C3C463C2CF29F74199D60E0EDEC2BF9E3D71D369639D19
94CADE34330BA317B27B4E249F1A8C5DABF4E62D731CAA9B6CCE4ACC8208F22F
9FBB6713BB8306E5B5A64CFF68E997B6F7BEF0C52DB9469CFC0E9E9A6D79599C
4503471023C5E8F779061500E5A439E880B3DF3A39154262B37BD16AF15612ED
9AC48BF60CFF85EB4AB4CAE2313AE910CF60A7C26619584A454909CB0B56211A
985F7377BEAA49275B5E62BC871BCFAE9AB645B4F4776280F669E93B30BCC7B4
F999BD126D2F0B0CBEAEBAA6412B6ABAE22BC84F3B2F41285EAB4720FDA89CDF
A3B4D22C3552E70D8797F7989036A06022925A0D41B177BFFBD9B94C2C008FF7
4A20138BEB2D094E74845FD8B9DF74AA62D78622FB88E2A56FE5D5ECE429F893
CE2B045FAA6B66C93AD9ADB6B31FDB14998C993C59FEB9C55B4B6D79703CA2EA
9C59E47B15ADF35B869BB210E4CA2F7873D03A24D4EE45DEBA1EEABD77E4DEA5
AF0587D4E1F7AB4D5FC561A82239CB795699A48E4C50D3F2CB72F296F0567E28
9F726C46E12F59F39FA64F19F1B81C8700E1D75F72AAAF5B1BC1C6880C53DE16
D1A11C4082A917865DF467D4D5BBF2DB6F4948C844D7640BCCFBB1FA99411A9F
800D5CE94555E5B57F59BF206737D1B3E9909285BBE76E5474C8E9F0FA8A340F
D5DCBB930E177C708F0F49D4C5647428F74126A18BBC645A5DBEC6014F3A2B5D
E2C0312A8282CE634513CBB2183C63345148CA672713569512F88A4B57DC39AF
183F556376AD9D14395ED197A6FFA0C2AEBFAC9216FB646FACC2ACCF79363999
7A6DA2E4F9E5FA2905FB26784F9F27A3F3F22644905B43A1380B4C95188629BD
49122CAC98B4F567B91FB1BEFA7092B483C9A4F08A49B356DB2C444B2D791183
4EFDD3D7586D95E7DFE70FBD7E679F03A8E2E4C9FC8705723A5D49D049F42026
6F034B72EE3B707AF89B97FFB1C9913179AA9EFAF1F18BA2BDBDB30BCB7139E2
95341A5EEE215A9235D7BE44C25DD2EFAFC0791FF14DF9EDAF5D6C7BB6E40E91
3EB2514D28294E884776A8589BA7AFC5418E3A9592C547B56DCB53F979236155
BB7F115075C7DB99853790761E3268067E16107A7F64DB575AB7B3572D01FFFF
3BAF2684AEF4F251F7F64E166AA0BBD3F6415A63047BD114AE2D12EC3B15060C
554322ED44F01BDE9D69BEC74A4DB0FEC9FF3462A4C0F7759318C9381B09A98A
F806357C6C2B74E99DDA2EC28573404FEC5D09F35DD29C26ACE13BAC182F478A
FD8D6EF86110C254191703D6E84CA6CDBEF9896415B06246F0AB45A5F9CFBCCF
2589B2C0232D70F6B05708C243F6DE4479DF86E18FE874700F081F0BF8E83786
B49D5CCF2C4AA52D3B9451A089D6260D33097352315C66200F1E2483C4407944
2DA41AA4D5DD70750F6B4CBFC5BA89D7E565A70ACD0FAE78D707284905648D89
E67F72A0E5DD2A7E2436A4D0EB7BD9AA1189F6A2A88398E151CFFBFDD570C4C8
89FF6E06E89C0A4DD63525222D5ECC5686326957B6CDF4492CEC50E13EA4209B
183E498D5EC423985F63F7BA5EA703122EF3B16963B9E47CEC0A1FB8C770A16E
D7ECE73C215EA05454C4659AE433D4E0215D5201E38EA898DBC9C2FE76B83BDD
B239D1BCAF9604B15FE6DA9831D6538D244542BCAF5694512E999B9F47E13778
A10C1BD006240A9AF04AB18FC9E6B05F86E81936029D289C982E5BBEC996F544
0CC50521346A87A21E2671A01D77C07385C9C27980E709E4D642D169A4543CD9
00C096A492130ECBCFF7F3E58DE3BCCE78BE93AA0B34B1FA3CA123BAFFACB6AF
74398500FB30DEFF210503DA330CBB62DFE941EB057B3F2A04B2BF0092DA5110
17E77DE30E4887C0E7B8F2A0D884F8C09A5EB9F0069858293901A0273116E893
95A49AB5121BE8803AA0108574C5FB78BE0E8615EACD45673984D60ECFED6A86
AAD4BA6096F6E76B47FB3B37634F7C143B29CFBA88DF8D87F32A7BB5B06672CA
D5E073D10ECA37C9A03F3A4EB501F760EF762B1505102220A5E815FAACF4DFEE
91E68DD6A7471F79E4C7B4BEA87D0B1CDE9287324CFA01A3003871F527868F79
C61C3A6793E9B65BA9E30013A0C6F2804ABD8B60BDF036C83910C75D87BF81D7
1265DBE5375B8C7188A9FD955AB938AA05F45AE3057CD06926013E424B527ADE
201E3A4AFDB7509A19FF1351FC0B250C7E68A2ADB14CC080AED96334E1090704
738285C8AF5812C4D473CACD84FE7B5E7B8B0F11C565837DCB8FC52D94C78160
4A5C1836D42AE4C4C56FC6198C13C4A227F7CC82B1937B920E8E5691F19B47D4
78FE1788AF768F98B873EFD9149CB522F9DC27A7496930ADA07FFB66FD78ABA3
86F463278A623CF72B4745FA539B64C01A25AAFA615EF89BC7B69CF9DF65D81A
ED1898D9BDD8473237788920E0AE9A52054DB5DC715FFF4CB4CB891553708747
44071829EDEB5A1A507EB2F751767CFBD4585217C9594EA3D6F4213128212D8F
979F398692D42903B681A33DE016A8E35D3D87EBFBB0F2600A3A62FC7574D584
9DDC3A8B43120B4964FD2AED5E39946D330BF32E558B510C0C2B0AB6DB39BB10
C1F4D149305E6D442E7D8B58020A08A3D340BFDCBAAA5E39F23ED0046C3861AF
304CD78499E0CC6F5A17D0A887B5BE606C0A21EFE6853F86A5F86680F4004C27
DB20FEF95B0BE467B5B7F436B45C83E6A2CFEAFA21AE6C39FDE40B9D08EF1ED2
E41BD6DB796F440720BE08EE3F855A597B65071E7946D810BF01979D3234D19B
9935952C99FA46782346BEA55C9935F7ABA897501019932A2029BE9D741D1840
0748934397085B1317D50229D50FDABAEA021D86D68B0ECFEEFD359AEE06232D
A7EBC45D51B25D1A18AFED9C01BB526053ACC5C0FF6206B2953C9350E57657B3
7CF00C4CAD4A6BE24650D5690822D31BAE22AEBB9DFAB6CD1F6858AB0DE8DC47
2DE1C044AE0C6870CE71F6C72CC0182361A86C0A5F0AF4DF9A88C88D0D781436
C21C1C78A8800AE691524E1C6FB25F41A15D8BBECAD4C5FB2F3A34AD00EA8287
69273159D4123E00A6BBC4C3CE3738D894770AD27F2BAA1A8AC49D55D311D7B2
7E7EA4330604D0E557EE03662BD31AF90587A45AE742E8CB5CE476D27812497E
F6A45BAD397E66F5FEB0E68EBD9CC0C4EF1AE31F8C52AA2F49D995911A8D17FA
331966746BEC646F81BBDBDF3F31B2867138152390F5B53217C565A7A65E834B
337B74E4386285642736625B58E6799BA4A13AA7B9A0D52D76BE8E8976A401BA
700C3E2AE79EF3735012C8F87DCC371BF585FEA85E2AE2F18C1272626A08ACAC
17D695064BCED8FC5E0BD1993772BCABD0A455BB4E2B843D955A35B70900EAD5
7E09228E923A91B2F77E5BDB3D94E4D7CF21012FAAAB5EA291EDC09A027BF818
C14FA05311C6C5B14CDEE1A8C2B197CD78B2EE736D809964277A9AFD2339BD50
90C017C85478B0C62F5D397310B247FC63F00B62FE4FD909C3F2356546257ABC
05EC581BBDB7D0EF1C0CEFF9173FC1D49D6D61A75D53479AE8AEC92B50833174
17818FD5ABE2A087CCB99FFAFFA4970D5611B2C5400068FC54CD6ECF23DEA987
C1DED69C5E2A897002CF895732BEC68A02C8165710BCE38063798F7A637B68D2
C86D3AD2DA85883698A74087C041F4CB92C512E40577DEDD7EA8BA95C479340B
9E18848E9E29CB04293E1242210AA7A444428DD0DFCDEC32BA6716DE5E7FC760
9FA268C0A6B5EFE74922FFE42DDE41DF98CA31E9E105C470D31D1CCF92E693DD
5F276FD1FE6477674579ED1C82FF8D90D6C3B12CE009116A990AD5B5617D49CC
4D8C3B77A4661BBC12D36F83E0BF1CBC59E2CC98A740848A7FE6FC54D717623F
6EE0CB7C8CA1860BCF6FC44F3B985D62B266C68434F07D98D17D1AE979279BC1
E60D84DECAAF93191A1534BDA304598A1CA14C790915DCE503D890B7BB8E8E9C
410EB97C73CF233BB9C8B7678EAB8A10DDA52A9BCD0054619BDB027DB3982725
33335CC4BB60FA73E29895CBABEFE86CB228E5194C5ED8B62B0CAFF841A38E0D
EC181F3FDC7AB35CBE0E4F9E7415CBFFECE8ED59FA094370D3482629FE543EEE
0453CFF7F2D00A686285D419118C256B6DDDF21B5FF19CF34E36707BDD1B5971
CCB9CBCA110373AE849C8C034B36F637BD085A3F8B709453FF760D217851B2C1
2ED31C6CED904C28D2862F862CD0DF4688EB9036359070EB79BC20284CE9D4B1
DFB9E12CB6D1A0B178A9E90E0BEA8273215DEFA1577123C2139F17C39DA06DFF
30E41A30EFFE7A2A0A44B4088F18E04634620AFE82D8937E8B0E7507B14E1E19
E86E9D403C81679A7636C84B11DF91C6F3D21FBBAAD00FDDDABFD9997F399B56
019BD1722EC190DA2FDCEE9D1F6066E42EE1FE5CD110ED47F95C85DAB7A4BF4D
13E49C8348AA90CBDC3D26280C7178806F882EFEDDC7E7567F91D6E9152BB511
49F7E7B7E69C93FB680C46177E47C937209B3DDB4FB58629DA4B7FFC74FA0D0D
E7678B06436706DA42CB01266A895A4537EE215F74CAC9FB607EF399E6C25236
639D7F81EBF47525AA137625FC6047E741415E6BA383FF327B9AF9CAFBCA009B
38DAD6E4635124F838605C151164A458E8BC79D7EF2FC349DF902545332BAD0D
ECA08CA30122FAD3BAC29300472E4BD22EC7DC28630759DACA43447F5663C5C1
1BCB810BF050D8F7241EB2C28B3FC055EA5F4EDA6E2CFC19B19395B539B7E9B8
3CF9AA4D149319CFFCB7A58BC7D36523B0DCCF860D7F535354872AE4D6B36971
C587DA94FABD769ED72AF7AE873074C825AFE8B021965A7E7F41FBC7A2BDD006
68EF62555EF03A581316BFBB1ADBD05BD996A499D1C5BB0E9675D9C60B09F542
F3EE5DFB1CEA154FEBEA9B6E38F12E061CE2BA539518634E0B1F18CDCA087402
9A46C9B238334915EAD4AB78D4FDF4878F11D31FB3D4E5AFC0393FC6C9776D47
0EB42E1459972FA29C49E2D9F8818ADD6EA4D637174260A2DF58AF4C523FC0CE
23DD08843BF60A73211447F2F4AD6CB5ACB2C7C5DBEF5E30FD86465BCC35ECE4
443993EE94A4B4812FD574F2D4128A45E99DAF740105AC3D461EF098A017BA67
43F34892B21726295DAFA0AF125C04AA89041CBAB9E91938126E521101ED3AF5
629F718DF9B36AE8571ED2D6F4600FBDC439A31CC0C33E9737B57690FC8CF817
17C7FF440FF3705FEB9F1C5EABC715A2B06953EEB49DB5C28B3E9FF0BAFF4F7C
E45AA7E25825A8BF7737F75600DA330CBB62DFE94118EC2326957BB7B3FA1C8C
18F2E6D0D7304344C1CA203BE7A9A5A5C06132E3F92F10EECCA7D40A9A7333E9
52FA1CDC235DFAE177B8DB3E67827BEBC1FF6FA73D9595C826F3B3963CE9673E
52892079D15D3A4C2CDB0CDEB4BC44261E6BE4109D5E0A6DCDDC389A0BA1E001
B0BBB655E64DA916D794140E4E4D4D4868FEB5BAF5691D56388F586D7C4B4CCD
27A22D0316E49D0E5BCBAC7D084BD22D231A9EC74C21D5902B420552F6491E77
C6A8B10BFA53BE2157801CFD2C7347D9D9BC826E183B2CEE6D4EE9C3509C8CA7
B5BF42C83A65815704D38238B9166FEAEEC7660317E983B54C6126ABE3A564D1
05FDDCA156141CDAB2F5E3E779094EE28CD4B6BDD636B0CB313738CD578FDE82
77D63F3985301451660A6DA6227F5A34A8D7F189682363E022F1B2AD1E501998
AB786A3B03A8BE0F77648430309BF5ED9D8632C4BD136C89169D45718A88BABE
2E5C30B5C93C144FD17EAB19CB076C36396D4C7506C27295030793B4EC86011C
B0106EC22428ADA49CAFD61F44067C56AA3C9B7FFF11E9378A08B9D0AF0BC5CE
FAC0C12FCEF1BC56E92FDE53A26F9395671BD1653E8DF6C145CF9AB0CCEC832D
418F137198942E87D4BC7ADA4DCC3FCBA1889B7D6498A0F0C355F94E92659245
514FB4863A8EDDE13AAF74B7BD78E5E3797E2C0E511974305A4CEC90911C63F3
417D147D88DC59CA8115591B9194D67524EC615041605D5F8BBCF52475C4E8EA
88F8C4C154F216313AD57CB183FAD8BA9F8EA2ABC36616E090CE356984C422A1
6483CAD8DAC9B7B0F3348A1A70D4E106FB5B55B74630AA906792688B4610EF33
F894F4D1FCCB3DAAA2E1A47767726BD5DF59A4ACFD007B5EB1E476F4839C4D3A
DAFAD7719A5A7B3909C5C59BE29E0BCA4CA9D0752F9B35A0E33BF88F07F4218C
7C63E8D3BF808CEC400E3738C6CBD1C92BC932BA06ECA7232BCC88C32C86016E
3FEAF72CBF3834F33AEB4209F9C10FD782A0D38A85BF58E60D97C172E91D5755
870A8FEEA12529EF854D88B1F03970643A986235433FAB3A0F8F65DE34F20329
CE99C7EDED9BAD4CFBA77156ECFCF0B9E85A3C60EAD30EF58F42E5D114F0B4D7
7DCFEA16799C408E9CE5EC8937C7AB2FF6A330664DAD98E133A61BB10A441ED5
AEB6C16122237C6B0AF20BCEDD4E2B414B108E285C3D8D550B762FFB4B3A6EFE
4FD40CBDBA3901B8A45215C633125CCF0F3858081B498CC5805967D366F742B0
A6858E9E68D2921D09678529E6908BC32B20F6C593D545184A7791009DAC4294
D4918817C223CC56543FB81890C93DDD779C5F41827AC37BDFE630B231F51293
04DCD9A5B9FAAC40B7E6B27949825D19519C5EB5D7F2DF6F02C25F79A8EAA631
29ACF3AA74FB0A92CE47825E74F20C7323D002B8598ED5DD5DFC43DCCD9A3934
2B791CEB5D785345ECA484C2378C1FE336093272A198B8B82BD6E28520638329
9443BE3C85EDC0B1E0948A60993BBBCBF095024D8C680D1E883DBB1CC9F5BE25
85BE635030EAA65FBCB6F8C8E766AE5F6AD0EDDA172D4865A60AB7B789DAAEE7
4161CA40931FA683FED39C0D2E3E1308F919F592DF1D0FDBF0986E99374770DF
6155E3B8A9A10FE7D89B7700392EE0223988AB668C0DE02971A772848CD279AF
D9FAB5E4CE6E6A000E16FDC7F56FE598D19AC35D7ABD28B6B7411BB8AF0E7365
683A9FE3FA4C554DC192E384F932ED389AC49F917FDCEF44BCC189B17599396D
B70424C6877C7BC1454A9686677278F34A36002F2818C36888372C57D0FF502C
0A002180208F08AD2F9CE10BF6AF7228225C14202AEB58EFDB388E09A9D27C8C
879BF5DC0AD9610D1979BD23C9C2FF0B01B9EF95597435F0C5E517F27F126C6A
982B72A068ADA629146CC173297F97542EAFF76697A51E07E62033C05CE32A6A
D172CF9DD1B8DC9E23D1751721FA293BE262D6D718795D6DCE4ABF60673775EE
6B1E48DC653A89EB18945C452991F6378D4F950896F9947034BF3C69D2737C6B
845D7EE20EA7A111A443494EE0E87098E09AD2608F744EBEE7C595B123A580A6
D198644049DED12F4BC683D16AD69201F8BC3012053AF9EBC8C8A36F19DB4EDE
FB44725EDE6761D7D722DB82FE8AB04756697C6B1C89C466578E2AEE7C543777
80B0FDBE164EB7200CEB625A2C4267D33EA018A2270622DAB445F2876A1DE288
4E34EBA8BE4480ABCFA0B54EB99FDFDB4E0A76BB8581CB84D70E3201FA084FA3
2F9CF94CB93E36ABBD6939CCD80529F5D4CDCD1141EF873A4D7DCCCD5170AA53
3B314D338E9BF94FBEA760D3604F156ACD003FC6AE2449B2B06CC7D49BAC3853
40EAA8125921E0646C0C76B875FF4244C04FDF6E751565EC4E0AC8A7E4182AF7
DEA896207FFB130A6A9B22CCB970580CE05378F2C6FDFDDDD4714D6447051273
018B38FDDDE4F9B48568A1F266938DF24D2FEF08751EB68167D275029162208E
68E34FB829B736CF1801C2CBFAEB6FE80A7FC47E1F71DC6D246C967D992227A9
59A92C419C2F4084B66EFA4E0BA294E409E73E461F74AD64FCEE4F11749324C1
53492569063382F37A0F32F12E15D9C014331CA1159872E9A32E92DDFCE698F8
E751237CB42E5C09B5D4A35AF79A9DCC8872EDB52A780C3CD743789E435A4103
0637252784F5FE400A3C60769E33A12938CB9D931E171BF9FE70413F647D9055
76F444E6A8524DBF6E9180221EDD0A4CE0248BB50D974DFBBB038CF77D8E3DDD
ACA8DA5FA18B7D63C9E45FB96B9C35AB2472DEAE8C0A3E9C2D8C9DC4428A9352
F4CF361BE5A828C54ACBE6E9B27219B7CA98A870C13DBCE520C20E6591B1F9A1
2B73D480A823A57F745E383FF8BB6DC0C752C8AE387F1D4C1742294ED1994288
8CA8A3B820DB6BE101296BDF05D292D7E5FE36DE5F27AF56018CC111F42CDB35
DFA8794F9477376AE807F9874C8D167AEDA5D3F96AB60F049863F6A6EA04886A
269544DE0EDDA501893797CE29995D5C6A65B10F6AE8FA7C6A8DFEF294B42685
17F1857924960AD78EFCF2663644C985191135F0156722F0BF1DFACDE7459E2A
C9127E70D10C3A04EE976B8938FDA640CB3077B916753DCCB18277AD91949383
3AC73ACA7B5E02591599402A0ECE784F633E3161FA6E6452ED50E0454810838A
FAF85057119AC29535FAB365FEB61999671C1DFDFA02B4B99D09865F4E86264A
28C739FF0A626C59DEC242C3A2B44F78BE42566A29879B74424AEEDC30AB178D
2851E2BD2A7153D77CBA7713E2A496759FF4210FA84067BA511DA13FA80C3856
ABEF64B5B130980FB0DC0B240935777EDE774B4792EF5C26C07E3B01F570AFDF
A6362D72C3891E4D22B39603970ABDE2141DE2EC6E1C7FAD9B098AC9C44F114A
5062D3648E863239D19BEB6D52A5B2708D4DF27C13D426440943F7F3276BCE10
B70B3648391908967F5324609899884504CCB95779E5CDD456756AC168DD3D09
17C1539A5DAA9AD34E7134BE594B65D769BA790F7159438C42FB1CFFCB08B0AA
19301D76B7450C9C5907D7FB93D4FACFA45E68A2453EE195441C0322F0BD29B3
DC3A070FB0498DFCF4351939AEDECA3E47EE055D5ACE08D9A100CC4229A4E33F
A93A0FDB1AE200E2F0101C9CFD29C70C899E14087CCC98F595F2C64AC365C2F4
332D39EDE8436846C7B54BB161FCBC32DF5AEA23709F8CF3D37D34429519EACA
BAAEE6384883F21D51527C9ECD8B9B222D0C72AE259AD5D13B6537F6890BF500
BE3C68E4D9D40638251FE20A5C8EFD39DA710A4716E17A4070B90E0346E0F787
3BA3F30DE02C2F5F77E8E58AF3D89F865580E510F180C63CD039D399B1D9C420
8BDE9E7AAA4D97A7DB4E6BB61E56591223190F13A772ABD2F000AC18CE6DD366
2306521C620472E803A4E69106EC5F077F30F6B956DBB99E2CEB0F7A22051ECD
9F845CE7A4C9AEDAE2694835B7D0100005A11804FF3293C2849E7078C59C3A4F
ACB395D9D771578B93C8F50D81E0B7B2853AD9BC9895E885C5164329B8DAB353
03C9B3CD8E5897C23A8E85501D138008FD2BCD8C4D5602521B8CAE488343C923
2C0AD9DE9147586372EFB8EF3E1A5CABB69CAFBB45E279D6009B4CAB20AD2B1D
58658446F270839DA76E1678F6639442C509285702CE8C9B21E0DE09939920A1
B1F9D45628810EC9D50E508D7B0C3E49004E35A7D695C669CB8B68439F7F9081
CFBD35F289E3164909FC1A6769B5172F2499EF27DBFFA5DAAB914C58F6C1B793
69678385C63DDD88E4528257B4D22A168DAD1C2B2AE6A54390E36C61A0628CE7
116F7C2E278E1C837487557CA29DA67A5175B7273D0CF0F3761C281C4E5A6452
04887CA3A7B69B8852E3C2D413FCDDE7CC487E31F7C63BC4DA2C1E5DEE0A7BFA
0431E161C8D6EDECA16A668E9E1F8AF746FB7704DFDF783BC9F85F24E0C8DC2E
B941F2D32EEFE3CB754599F8AC1B8AB0D3F7B488EFFAE7C33A48203B474C4604
A16911387A98EBBB49923C96CBB8A55F77692E6B5A3B4B52AF12982D2488C086
35E816AF46C7B3148A9BCDE9361B21B7305542ACEF50660905288A8FF8FD6EFC
421FEA6702D9015A56D1606A683A1619FC34BCCA8081C15BABABC96302B04163
FC7609556AA68B33CD2B4D5683D53A0B076A3229F938BA96257922CF50F8E53A
8FB92FCB707617773AE9F8810867F72773B2FC7B0379B6892FA5AEE51455630D
A33E5A4820DB855938C717FB67815E473E93CF638E8D3D5EB2D2A733EBD2C86E
1FB0F38BC42E7861BB80AC890A8482DF22295AE24CE9A8C2D05A42DFC0242606
B7C71A79E3DBF8A7DF5F375264928EFDB6FB5F3E4266B74F605D0758043C610C
78E6D029816CA77CDC503816B507D7E9C1807ADA0EE6CB97C57DBC89D282048E
F3AEC5D0A12B7CE468D034BA27D17393FB47EC541D312C8EDE1BFCF971935513
7749A6ADD2B009AA0F6572CE82AEB9AB14F25C7A83791D40B7D6991DAA944819
933B5C54E0C8B9542A4A9E2D148B1BE77F01375D477085E629579AD0D5132688
62E47A0F7D89CFD75B27C3F57157D17A3EB14DF4A05BC2FD3E8502306523A37C
C5DF698F83F1B693B0A4FB6BB51058A242CD10719D1C99E39B66A11EBB2F67EE
595F2EFFDF23A7D78013D5BBB2CE6E15F0C76702E35C4843F88E3E586FAEE8CE
92B2188E5B40FE903C5083B4B071D47E59ECFEBF7BE5D3E9ED9269C45874B8D1
3A033643F700095FDB6EEDE5AED039DF2F15A2856E8759D35F2225EA92A60DB6
ECA2A703855F4587049657E0725876F5E08B3398725852382420C311AF97CED7
371588224285C50EA594CEE5F9CC9DBB08FD778C032972A5F056897B36A99970
2BA6B0DB00F3AB9EDB1E20E0CD4836BEB39E7C65DE95A871BFAC2E2BC8A5483B
BA74C9D2989604F4758ACFF6679074CDA8F0EA3F49653C75DACBE03C2D0B1B96
D7F06147DC4856D41B38A29224C56A3E12482082BD12DFC3F3CA1079FC8DCC15
81A7DC690A569BF9FF5BE48320D0D302AAC0B5F65D1F8D3F2A5B8CC12079C24C
6494EC5AC06119A1126137495F97E58EE88C4ED17F2C47F9122825F10DDA9E7D
99B4D373F52ECB1D12F652F9DE6AE3BCDCA2BC68BB1AE532C9EC815DD26E8CB8
FB5DADB14A42737BBEB89AEFABD2D78BCDB879307DCC498F3D4D19F4357B47FD
9536518021FF0EBAFA5CFA4C5723CF4032F68CABE0E7C2AB36D1249689B95DCC
6C6A6C36E4797A758CB7C97C61B0BFCD46B00C70E08EE336E0B32C249A45664F
72CB4AAEB767D027AE25B5EFB308039AFADB230A8CBCA0D6A959E5882DBA0461
1BDE0D4A32B842DD18A4748B82E41466303A1EC305BE072574E584A1B6359C29
5D05DEA0DF46E4059F2C10C7984042E99DDBB351DF7A4BF8FCA91F7989F774B7
AF88A804D90F3B668213C7F82D6F964ED2B3D2FA46922C0A2A2D075A6B82BE89
5B6B34661D8DA9EB73D8680C1FFDBD66EE9CEABDF2E506D926F515B6576AE85A
B908460E510282E9D147D1E63CEAF84F7FC29D377D255FAE43C95BB692B2E978
AA1DFFB26B392ED0E69CD06634F41311C9569E9F14E6A75234D9A7FEBB82BD69
0A8365C0113FA0296058CF6E3061AD9485B9C6A93107619B7F429BD5A5B032B9
50C531B7813E52DCDF3979E6DBFE2B290B76C9BB40064192C2AEB43E05FBD382
D93ED4ADF8E1E3F35E8F40F6857E832CF481B2B6841A3C66882EBB0F94875CD0
31022C95BA881EB98DBF894ADE343AB5E242B22DAE3C03719DC010B420A35058
EEDD059614968133B3AEDCE7792F6B9CE9667E2CAE66001A1E02E13B9C957A84
FF2F99973178884031C504104FF01A8CEDF37E08E5769C9063D4B97805782177
625413D5D0472183F53BEA641E049A6B6AB7D3F09B6A293E77F10A3E423BC245
A92A80B571B30D974E7A58D6C05A1CBC7C7A539577A552FAEC82529E48864F8E
A9B792D6AEA4A96ABDD3A8AAFF9B8F7509C40CD21C1686CBF4C6E92AF1A38518
35CBAF06CE1ADC51928D10E0504DC7103CC3A4B1980DCEE94BF2C54E864FE42A
A826B49779A8ED753FF22C7A75EB001089AAFE96F0336146F5E6380D5545007A
36FAF106C69516C2694D43E415F460780114F94838E464693B34ACA54C0EBB8F
DF60E0A028737344749F0BB17EE91BD73ED98755C909CFC2B0C09DD761CCEE70
DA968A13C6A892C91690B2691C73781B31D458788FBC9BC7CCE283A97DB932C8
CB55CFBBE65213FBAAFF2BEA2F92A9D63FE01D94C75107E2AA282C1CF2EF7660
25D565AFE6466013C78B93D3DC56B9961E0EDA1FF6BDE1B959E81CC0F157945D
EF9044B1586BA1D3A0AF7BCC25BF55BD551954F7E7D871C0AFD7736DBA45447E
818D653A16AB49D23BBBA5D386E60DBE4CD0E54C671D9DCAAD3185EF69358D90
B12963C7DACC8C652DD6C9608FD69413CEDC8512AEBDDA33D4954495EDEAAEA0
D9FED7B55B891A08FAD24873CCB3167FFF953DA1B159DE00A8C574AF0924F0AF
7000836E465921CA39D69ECB4D9434E59107775F050E98075B0B192F7D662DFF
6C5D7FDFA0F7E8EC14CD28969DBCBE2177652F97777A7017DBEA2A7B7611012A
3D1D0CFD8FA3B43032AA12C7AB915FA7CECC44CD5A1BA43FBB2DB61FD12F5599
35808AE254DAF61BE9D6D2A3A0D9CA28B57D2CDE29E423F516D2D91C9A4DE2A7
5F365926DF4900F50481177B2A4DF0F4948853C1163F6FA134E884CECE907DE4
1B0139B13D04AF26D252B3D4D50B9B6522CA0E57210F9AC5317E4517E94A9DAC
319FEDEE4F5F08B9D22B1187D63A087FEEFCEBBBE79CB9728EB209FB5A0BF365
03962A24527593A0F24F1083F75156C2E635EBB4A7D18E0B32ADCB9E7DAB19B7
A283E189BC2517B87CDC6446E54BAAC94023F2EAADA298A1B36F06C44ACC7E04
2A64B3C26AD0AF1ED92130BE472D889D94D07AD9852E99D0E7976F7DF3A35EF5
1829D63A54767B0C2F5CC104ABEF3AAF4AA6996E9F691DE276E5A81219D74B7A
0FE34EEF27482FCF0850DC4177689EDAA8C0996A278DE12A278A648D0F65171C
4B15510083F73F9CE07ABDB29FF50CF65318661FA38413203E10D5F46E818B39
00A8E060759443DBEADAFB64D3E183F0AB7EFE1556A1F77C5B65ADDD3EFA0199
F900BC3D38572679C7D4F7C8957ACFED6390F111DB06AACDCB4E4BC1D7C2248A
32DB16FBA88862E8932E2CD752275B5BF866E0253E7C8075D3093851E631A894
6DD3A0F0C1992805A7CDEFFA983B71FAFCB1D0B9A194E9393FFC4A2FEB64B33B
26F3837760BC10055283F8C124287A1BF7D0C3B3478F37A99E20E7E5E2E51EE9
2A59E548EF82320480DECBC789682B1B65F98BC54DEFA5D9C59CAECB661C5176
93E9407C486A99D39F38E79587B030482A64D8DF3D4B054A20146031E57A0768
96AAC9144721A3989554093C4BA6941CBDE2E74769604EC1787284D51A5C0AEC
B96DA9719B549BA61B7E89A03142137A6E479C1089EA5BCC351E58A8027C7B1A
FBB9EBD90FD69533236404449A8CAC926F7BA7C2A52095628C351031F5331C11
36C67399F89E596471FF79CCCC277CC8B1B9F5F218A8DEBA8D1DA2FD5C321263
5AC0C35C5980BB1661B01C7A9F128CA1C766D40D626A8C45E0C87B30DBC5BDE1
B8AC7580C21818D82FDA474FB08C08F224FA27DF6C5404F0CA65EF00A2A05E36
51B1DEA7101DA414EC6998A3231EDCB2068B85D04EAA833C4905C6F78443031D
23B3C4A2F4D6DAA40BA72AABE81D6D5E001B17A8D8ED5408FF354A7CFFAFD5AD
A6F51175315FFA995B40A5BBB08D0673A957692B1683F51F6BC822643B669943
BB03BFB02CA6663793DF6E573EF2FD691E89B1E95170BD0FEA33ACF7EDA73326
9431C7EEA5ADE965D34A77354E3CB9FB3E8E32BF7E4D9FF9D8389EA14C9BA108
E7E3B54D1D2D32CB515A43C0BC0B89EFC576E16E367D09E77F5F917DD0E2E411
A75555EDA41EC2E40C6127656BAB0458F3608C0DD390A1067D7EC34ACB1C5705
9ABCC46C2C684960D07B9E684D9E2B15735775C67EF60135046620EE0D12FD3A
CA5F53E8DCEB83C87431486D51A2B14EF1A1A43105912A552D83D82E2CA4ECA3
DEE857C20847BDFA38CADF58B9159EE8027A1D259B7A859ED2A9C5B0CB44C74E
A7088C38E6CFFBDE12D403B313344187CF020B185AC803E5D64D7DE2C91A6157
DB0543A16921892CD6E47245C27D62625CD85831650FDD75A170572C5DFCC89C
89BB782F2C962C163CE48BAA5D06E76BF1C0DE4BCD5504CE7582E26D7C035B5C
3C2633A37E1F03998BBB5979502164C4AE1C54639460795C14215C3E243E2933
82029321ABA18E70AF209F36E562D41DA19275896F2270B86FCA5186974FD66E
0C5C61A99A29F45833382627164E902C1A1F97832D02DCBAAB5D22AD80482FD5
E32160CDC1986543DCA08A50165A5778C05B62DC1ECA7CDFA81321B875D10F2F
1D847ADC9F5CE0AA502B6E1BB038DA018E04B330F2C2D57CC39E79653647F4E1
31E27942405F7913353418F599EE81B844
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: StandardSymL
%!PS-AdobeFont-1.0: StandardSymL 001.005
%%CreationDate: Thu Oct 21 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Standard Symbols L) readonly def
/FamilyName (Standard Symbols L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -229 def
/UnderlineThickness 46 def
end readonly def
/FontName /StandardSymL def
/PaintType 0 def
/WMode 0 def
/FontBBox {-180 -293 1090 1010} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 109 /mu put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA4706D91AF999C9244BA4C770
FE5B3485F083B758947E4EDACBB478E55F1EDA6FD43755F3819F9292072ADAED
FDA1ABB92842199CF874FD0D8A6429D69D5F1E8BB56FA51E0B0A12874786CC3B
1C24C9C608F40C7774946DE7D3EC6F234B793C9170E9678D19994D61A213FE29
925028E208DEBAE41C0BBCBFE69FF9920D5473AF395F9D07E27F7871953BCF83
0D8E781B183FAC31DAA08488CC639C348BCCB2FDEA9BF11CFC9CF589E0E5D912
9471AF733E09424A60685F4516C1BFC2912883835D495AFD44781CE0FCE03FD1
AEFD4190D530C243E82BACF9BBB7135AA21AC329BD25AFEB5284D0FEA70F0757
7047772298ABD77E1BC00DAA5CDC0B8C239EFAD8A783A1260C2C8114B1CEF1FB
FEEAE79B4EC33824BA74E4BEA34BA26730DC2B90DDA59868D0D53327118E0A9C
CF307F710DEBD7CE9A7888FE9B339E1561B4B83F838F8D9C615054192F4B8452
5908F8BAA5220EE28F4222C1FA5A97DB983BCF9F584866482CA7EC79A4AC1199
8E071F5260F6478E070D0EB84A342890283F5B5640CF3C44AA2A1724F5F09186
1086C71F7953533AC56D6265200EAB54BBF0FEF8154EC13229A8B2AF4E6F4449
04A576D348562D512556AF95293C7D115FCAD4853FE394BEE62A4A50E356EAA8
868DB37F4D663F183246F037704841181AA9648587A09E8BD044DCEF584652ED
F29680F41DC6D30C3B87448482F45C08D4E0EF8B8C63299CD53BE211B10C9B5C
28A65E998DE002C96396BA0413FC30097DDAE8237E4A34D9C413472B2EA38F17
3D29C443DC03930F36B48779449BAC308C6F43FE6CAC50C3314D6CF5FABC872B
B7CBADDD96379AAF85834398C2937AF2B1EEA58832DD7CF5C1E29104673FFF05
318CC3F90635CEE5E03D4910567FB7EF2CEA3DD949FFDBC1EB5419A9DD28A255
4BEFDC96EA8DABAB0AC230DCB02818AF9A164918DEA34758E0403DE294B3EE43
660E70D22D1F9F4F865B7E3D72C2097C761C40DBE2A9AD81F7002A27F2EDE345
9E49C2745514B56F8E0190FD4FA2A0A6266B9A9511819D1F2E0F341CD443E0F9
0CC36D65565B2A317094CFE27D918F5DCC127C76FF82E579A06D8A3A32345880
8BAD0F4E3F553934AE1CDEF29DE336B98C4ADD7F99BFF30C1D2EBBC1F3A14197
89198116202901B611D9294AA70086A115AE8AF7EA9C371BCE407C96840957E3
6A2008ADCA2CA74B5DAFA70C389BA8798B3CB383E4249E0919ADB799ACF71160
7ADA252DE7CDF57750DE134D16257E6989B76A91534C2564B0516C18C9EB0B1A
FE05A789CBE20DEC1DA560FCE287B86E393C824960DC43AB01B45966A9F6C2FD
A093CC4A456136B6AD2D692388534B0E643A05643E8A83038029E832F016A7FE
7F789B1C40AA9FECEE64779D73DC383C3E0FCD9101CC384C1488C4D37BF9F6EC
90F8B81FDEA7E93EE59CBD06497B40B6CE001EB5EE7A9F636F046CC24897AC3A
4A4B69B9262BEA8D983F72A8D5856E38EB16AF71A4A32B801E4AF89319F6B0B5
F32883144D56858DB62E818C0A197A853688E3AA3162E6138192E19652A23D58
DC33153C408ED9FDB7A1BAFF2F1602E398D58C69E40B6E071D6710FD81A5C59D
0F9224DA14A90F1691C479F86CD53E8CC9DE6B2DDB148E81B1F6B9E2B7C36C32
33AC20FADB3505BE2B8C29DB3630B72D102B8AF55D093AF2E3567278BCA1B75F
439B211312359A01B9D77727D38B9EE253F31B94C9AF9270C53B5EA44411BE39
9A1EFFE6AA02EBE529146BB9E0D14D1666A9EE3D37E8641DE801976EA3C2E3D3
26612EBF7276BB95045A7372EB87999E94BB52F8168D7B194D57EC6530162460
848153C749EF0DE6EC83878CE9C3969F827B2A28BD444DD1B0EFDAF667A91817
1169D86699C9AAAA8A72683C54B45F81F355D9D19496D0F80472B6D96E9F2E80
2299F67905281285F890FF78C7D0BE2125C767B37870CB666228744DB62F3258
8C5AA6C0219CF0E5ECDD3E91D91C57D820782A64C6A5A83CCCEFA5F6F52CE034
308E42C75983C5751E8D91AB6EED5B8A6E4DD06DE6407F57CBB23C12F76D3135
35879DA64FA8A2E3CD644234BA7F77FA96C0CBFBE7368359D2353672BBA626F6
A2103DAE69DB0BEBD21CC1E3CCC89BF0809008377D1D0CFDB4FB1128BB005614
7539D836FA1D609E7154612ECA41BE849D5BE1C72A07FECB4F40957EDF2170A6
E9FE56A43E47AC70F7D09EB87FA949FBA6FD194B269A119362353847D6E44E14
083FDD171EA303D2AFD535AA7EF60E005C6CE09C4F04BE23B7AA1DD413D12D9B
F1AC6B0B50AF45D75D8FAAFE386ED471EF229009DB3DB9A359FA47A0B75CD846
6A341255CB331AF4E1587C84F476966FA4CC8348DAD1B0E321CD4DAA7929B044
9BCC4612C47E3D3651D7D6E0C31A4A2589D16A0651774EF04FEEF4D27ACA13CB
72F6ED429DF7B054909D165AC58C5523A0DA508D49CFB93F6F721F708FB28C04
50
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 165770035 89989444 1000 600 600
(C:\Users\rakes\.matplotlib\tex.cache\db\38\db3831233505785866fc1bb51c53ac1c.dvi)
@start /Fa 134[208 208 2[208 115 161 138 2[208 208 323
115 2[115 2[138 184 208 184 1[184 10[300 1[254 15[300
2[300 13[208 5[138 45[{ TeXBase1Encoding ReEncodeFont }22
415.11 /NimbusRomNo9L-Regu rf /Fb 146[430 109[{ .167 SlantFont }1
747.198 /StandardSymL rf /Fc 204[276 276 276 276 48[{
 TeXBase1Encoding ReEncodeFont }4 552.931 /NimbusRomNo9L-Regu
rf /Fe 133[332 374 3[374 2[249 374 2[374 8[332 374 332
1[332 13[415 2[415 3[457 3[539 1[415 3[498 10[374 1[374
2[374 374 374 208 5[249 249 40[{ TeXBase1Encoding ReEncodeFont }24
747.198 /NimbusRomNo9L-Regu rf /Fg 139[23 32 28 1[42
1[42 65 23 4[42 28 37 1[37 1[37 13[46 2[46 80[{
 TeXBase1Encoding ReEncodeFont }14 83.022 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 10800 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate

-600 10800 a -600 10800 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 90.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
0.000000]](psmarker14)[[14(bl)1 0.000000]]15 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 -600 10800 a @beginspecial
0 @llx 0 @lly 2520 @urx 1368 @ury 25200 @rwi @clip @setspecial
%%BeginDocument: C:/Users/rakes/AppData/Local/Temp/tmpa0sham1d/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: Flow_noise_3D_vs_Knight_Jineesh.eps
%%Creator: Matplotlib v3.7.3, https://matplotlib.org/
%%CreationDate: Tue Oct 29 11:11:20 2024
%%BoundingBox: 0 0 2520 1368
%%HiResBoundingBox: 0.000000 0.000000 2520.000000 1368.000000
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
2520 1368 0 0 clipbox
gsave
0 0 m
2520 0 l
2520 1368 l
0 1368 l
cl
1.000 setgray
fill
grestore
gsave
254.323021 181.405346 m
2448.580201 181.405346 l
2448.580201 1327.604393 l
254.323021 1327.604393 l
cl
1.000 setgray
fill
grestore
0.800 setlinewidth
1 setlinejoin
2 setlinecap
[] 0 setdash
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
254.323021 181.405346 m
254.323021 1327.604393 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 181.405 o
grestore
gsave
192.903 112.986 moveto
(psmarker0)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
985.742081 181.405346 m
985.742081 1327.604393 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
985.742 181.405 o
grestore
gsave
924.322 112.986 moveto
(psmarker1)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1717.161141 181.405346 m
1717.161141 1327.604393 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1717.16 181.405 o
grestore
gsave
1655.741 112.986 moveto
(psmarker2)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
2448.580201 181.405346 m
2448.580201 1327.604393 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2448.58 181.405 o
grestore
gsave
2387.16 112.986 moveto
(psmarker3)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
474.502098 181.405346 m
474.502098 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
474.502 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
603.298601 181.405346 m
603.298601 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
603.299 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
694.681174 181.405346 m
694.681174 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
694.681 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
765.563005 181.405346 m
765.563005 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
765.563 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
823.477677 181.405346 m
823.477677 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
823.478 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
872.443835 181.405346 m
872.443835 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
872.444 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
914.860251 181.405346 m
914.860251 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
914.86 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
952.27418 181.405346 m
952.27418 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
952.274 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1205.921158 181.405346 m
1205.921158 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1205.92 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1334.717661 181.405346 m
1334.717661 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1334.72 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1426.100234 181.405346 m
1426.100234 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1426.1 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1496.982065 181.405346 m
1496.982065 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1496.98 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1554.896737 181.405346 m
1554.896737 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1554.9 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1603.862895 181.405346 m
1603.862895 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1603.86 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1646.27931 181.405346 m
1646.27931 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1646.28 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1683.69324 181.405346 m
1683.69324 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1683.69 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
1937.340217 181.405346 m
1937.340217 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
1937.34 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
2066.13672 181.405346 m
2066.13672 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2066.14 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
2157.519294 181.405346 m
2157.519294 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2157.52 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
2228.401124 181.405346 m
2228.401124 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2228.4 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
2286.315797 181.405346 m
2286.315797 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2286.32 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
2335.281955 181.405346 m
2335.281955 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2335.28 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
2377.69837 181.405346 m
2377.69837 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2377.7 181.405 o
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
2415.1123 181.405346 m
2415.1123 1327.604393 l
stroke
grestore
0.600 setlinewidth
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.6 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -2 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
2415.11 181.405 o
grestore
gsave
1069.55 10 moveto
(psmarker4)
show
grestore
0.800 setlinewidth
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
254.323021 181.405346 m
2448.580201 181.405346 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 181.405 o
grestore
gsave
202.491 150.382 moveto
(psmarker5)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
254.323021 410.645156 m
2448.580201 410.645156 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 410.645 o
grestore
gsave
157.659 379.622 moveto
(psmarker6)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
254.323021 639.884965 m
2448.580201 639.884965 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 639.885 o
grestore
gsave
157.659 608.862 moveto
(psmarker7)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
254.323021 869.124775 m
2448.580201 869.124775 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 869.125 o
grestore
gsave
157.659 838.101 moveto
(psmarker8)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
254.323021 1098.364584 m
2448.580201 1098.364584 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 1098.36 o
grestore
gsave
112.827 1067.341 moveto
(psmarker9)
show
grestore
2 setlinecap
0.690 setgray
gsave
2194.257 1146.199 254.323 181.405 clipbox
254.323021 1327.604393 m
2448.580201 1327.604393 l
stroke
grestore
0 setlinecap
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
254.323 1327.6 o
grestore
gsave
112.827 1296.581 moveto
(psmarker10)
show
grestore
gsave
87.533 326.518 moveto
(psmarker11)
show
grestore
8.000 setlinewidth
2 setlinecap
gsave
2194.257 1146.199 254.323 181.405 clipbox
401.588604 1020.684872 m
416.315162 1018.907696 l
431.04172 1017.66711 l
445.768279 1014.147029 l
460.494837 1013.507762 l
475.221395 1008.228963 l
489.947953 1001.929295 l
504.674512 1007.99354 l
519.40107 1002.553443 l
534.127628 1009.648197 l
548.854186 1010.73666 l
563.580745 1010.480338 l
578.307303 1011.367728 l
607.760419 1011.514221 l
622.486978 1010.017105 l
637.213536 1012.476326 l
651.940094 1014.066565 l
666.666652 1014.642525 l
681.393211 1016.949327 l
696.119769 1017.940647 l
710.846327 1014.277247 l
725.572885 1012.853603 l
740.299444 1010.836998 l
755.026002 1014.802469 l
769.75256 1012.882466 l
784.479118 1015.242099 l
799.205677 1011.669173 l
813.932235 1016.361228 l
828.658793 1013.623701 l
843.385351 1009.369476 l
858.11191 1007.025136 l
872.838468 1008.120098 l
887.565026 1012.081225 l
902.291584 1010.696549 l
917.018143 1005.954831 l
931.744701 1004.35484 l
946.471259 1010.766878 l
975.924376 1013.306025 l
990.650934 1010.152095 l
1005.377492 1010.841774 l
1020.10405 1013.394958 l
1034.830609 1011.650369 l
1049.557167 1013.281035 l
1064.283725 1008.641375 l
1079.010283 1012.692314 l
1093.736842 1013.011022 l
1108.4634 1014.10115 l
1123.189958 1005.907363 l
1137.916516 1002.105455 l
1167.369633 1002.047785 l
1182.096191 999.258918 l
1196.822749 995.91458 l
1211.549308 992.107952 l
1226.275866 988.416314 l
1241.002424 980.455773 l
1255.728982 972.291894 l
1270.455541 964.693406 l
1285.182099 959.353319 l
1299.908657 957.961924 l
1314.635215 952.172848 l
1329.361774 941.718188 l
1344.088332 933.27681 l
1358.81489 924.273957 l
1373.541448 913.722929 l
1388.268007 904.11677 l
1402.994565 894.264162 l
1417.721123 888.441649 l
1432.447681 883.365026 l
1447.17424 872.846706 l
1461.900798 863.455462 l
1476.627356 852.530702 l
1491.353914 846.835618 l
1506.080473 836.731176 l
1520.807031 827.138107 l
1535.533589 820.601485 l
1550.260147 810.255917 l
1564.986706 801.591603 l
1579.713264 792.316933 l
1594.439822 782.786462 l
1609.16638 771.305282 l
1623.892939 758.980023 l
1638.619497 747.739904 l
1653.346055 734.49747 l
1668.072613 723.484948 l
1682.799172 716.044224 l
1697.52573 705.466817 l
1712.252288 695.964035 l
1726.978846 693.396588 l
1741.705405 680.870478 l
1756.431963 670.302522 l
1771.158521 664.134668 l
1785.885079 655.303541 l
1800.611638 645.310915 l
1815.338196 636.954687 l
1830.064754 629.821981 l
1844.791312 620.560825 l
1859.517871 610.554503 l
1874.244429 603.484669 l
1888.970987 590.553618 l
1903.697545 584.773904 l
1918.424104 578.276605 l
1933.150662 569.124811 l
1947.87722 563.204606 l
1977.330337 550.427401 l
1992.056895 544.974508 l
2006.783453 537.772802 l
2021.510011 533.753465 l
2036.23657 534.326583 l
2050.963128 528.412087 l
2065.689686 524.016803 l
2080.416244 520.91018 l
2095.142803 520.595338 l
2109.869361 516.109709 l
2124.595919 511.875191 l
2139.322477 508.395877 l
2154.049036 503.899318 l
2168.775594 501.662889 l
2183.502152 496.676143 l
2198.22871 486.939406 l
2212.955269 483.300873 l
2227.681827 479.055195 l
2242.408385 476.335487 l
2257.134943 469.725648 l
2271.861502 465.282491 l
2286.58806 462.49061 l
2301.314618 457.558611 l
2316.041176 456.276568 l
2330.767735 452.11985 l
2345.494293 448.481452 l
2360.220851 443.964511 l
2374.947409 440.232964 l
2389.673968 437.098164 l
2404.400526 431.163726 l
2419.127084 427.332283 l
2433.853642 426.046661 l
2448.580201 423.975497 l
2448.580201 423.975497 l
stroke
grestore
0 setlinecap
[8 13.2] 0 setdash
gsave
2194.257 1146.199 254.323 181.405 clipbox
401.588604 1037.684057 m
416.315162 1047.53921 l
431.04172 1061.455709 l
445.768279 1076.742667 l
460.494837 1084.823458 l
475.221395 1079.511917 l
489.947953 1067.369675 l
504.674512 1055.410658 l
519.40107 1045.625971 l
534.127628 1037.942469 l
548.854186 1031.896627 l
563.580745 1027.068356 l
578.307303 1023.148024 l
593.033861 1019.924055 l
607.760419 1017.262086 l
622.486978 1015.089708 l
637.213536 1013.400403 l
651.940094 1012.28736 l
666.666652 1011.990918 l
681.393211 1012.995256 l
696.119769 1016.078488 l
710.846327 1021.573598 l
725.572885 1026.321151 l
740.299444 1024.459817 l
755.026002 1018.037496 l
769.75256 1012.250284 l
784.479118 1008.750034 l
799.205677 1007.140825 l
813.932235 1005.029159 l
828.658793 1001.168862 l
843.385351 997.543966 l
858.11191 995.17265 l
872.838468 993.234322 l
887.565026 990.561449 l
902.291584 988.330911 l
917.018143 987.032004 l
931.744701 984.054192 l
946.471259 978.406401 l
961.197817 972.535201 l
975.924376 967.600045 l
990.650934 963.725458 l
1005.377492 960.301219 l
1020.10405 955.547083 l
1034.830609 949.55251 l
1049.557167 943.325886 l
1079.010283 930.498151 l
1093.736842 924.168641 l
1108.4634 917.383522 l
1123.189958 909.522161 l
1137.916516 901.473543 l
1152.643075 893.680681 l
1167.369633 885.432489 l
1182.096191 876.563876 l
1211.549308 858.264027 l
1226.275866 848.753655 l
1255.728982 828.835921 l
1270.455541 818.616719 l
1299.908657 797.610045 l
1329.361774 776.125185 l
1402.994565 722.05378 l
1417.721123 711.433672 l
1432.447681 700.963491 l
1447.17424 690.665814 l
1461.900798 680.569582 l
1476.627356 670.710241 l
1491.353914 661.114538 l
1506.080473 651.787582 l
1520.807031 642.770712 l
1535.533589 634.08736 l
1550.260147 625.736655 l
1564.986706 617.762615 l
1579.713264 610.183996 l
1594.439822 603.029296 l
1609.16638 596.336978 l
1623.892939 590.148684 l
1638.619497 584.512057 l
1653.346055 579.483094 l
1668.072613 575.134523 l
1682.799172 571.550818 l
1697.52573 568.842675 l
1712.252288 567.153103 l
1726.978846 566.645442 l
1741.705405 567.517651 l
1756.431963 569.990117 l
1771.158521 574.314125 l
1785.885079 580.773693 l
1800.611638 589.68473 l
1815.338196 601.316566 l
1830.064754 615.579631 l
1844.791312 630.885323 l
1859.517871 641.55265 l
1874.244429 639.108843 l
1888.970987 624.453556 l
1903.697545 606.142738 l
1918.424104 589.008727 l
1933.150662 574.245001 l
1947.87722 561.875807 l
1962.603778 551.74024 l
1977.330337 543.77323 l
1992.056895 538.097082 l
2006.783453 535.07097 l
2021.510011 535.302607 l
2036.23657 539.548539 l
2050.963128 548.267247 l
2065.689686 560.179857 l
2080.416244 569.284921 l
2095.142803 566.517672 l
2109.869361 553.0456 l
2124.595919 537.433302 l
2139.322477 524.18245 l
2154.049036 514.574878 l
2168.775594 509.279108 l
2183.502152 509.061973 l
2198.22871 513.330645 l
2212.955269 516.194419 l
2227.681827 509.857788 l
2242.408385 497.334477 l
2257.134943 485.256837 l
2271.861502 476.185508 l
2286.58806 470.616311 l
2301.314618 467.054677 l
2316.041176 461.120631 l
2330.767735 452.39714 l
2345.494293 443.964477 l
2360.220851 436.873675 l
2374.947409 431.057187 l
2389.673968 426.443238 l
2404.400526 423.208894 l
2419.127084 421.539974 l
2433.853642 420.322921 l
2448.580201 417.767025 l
2448.580201 417.767025 l
stroke
grestore
[29.6 12.8] 0 setdash
gsave
2194.257 1146.199 254.323 181.405 clipbox
401.588604 1025.359409 m
416.315162 1029.050628 l
431.04172 1033.823132 l
445.768279 1038.429751 l
460.494837 1039.728589 l
475.221395 1036.680269 l
489.947953 1032.145402 l
504.674512 1028.003186 l
519.40107 1024.600165 l
534.127628 1021.832099 l
548.854186 1019.546612 l
563.580745 1017.623114 l
578.307303 1015.97697 l
593.033861 1014.551633 l
607.760419 1013.311588 l
622.486978 1012.238039 l
637.213536 1011.32823 l
651.940094 1010.596226 l
666.666652 1010.069846 l
681.393211 1009.769008 l
696.119769 1009.612906 l
710.846327 1009.275579 l
725.572885 1008.320331 l
740.299444 1006.491755 l
755.026002 1004.3226 l
769.75256 1002.344904 l
813.932235 997.154436 l
872.838468 988.623711 l
902.291584 983.680854 l
917.018143 980.981215 l
931.744701 977.769563 l
946.471259 974.091663 l
961.197817 970.207055 l
975.924376 966.162684 l
990.650934 961.956074 l
1005.377492 957.567905 l
1020.10405 952.823614 l
1034.830609 947.745951 l
1049.557167 942.392002 l
1064.283725 936.787184 l
1079.010283 930.999904 l
1093.736842 924.988149 l
1108.4634 918.462799 l
1123.189958 911.508851 l
1137.916516 904.274565 l
1152.643075 896.797582 l
1167.369633 889.031249 l
1196.822749 872.880381 l
1211.549308 864.727488 l
1226.275866 856.324569 l
1241.002424 847.263947 l
1255.728982 837.944251 l
1285.182099 818.83543 l
1314.635215 799.586179 l
1344.088332 779.265526 l
1388.268007 748.610818 l
1402.994565 738.605185 l
1417.721123 728.860427 l
1432.447681 719.545034 l
1461.900798 701.252558 l
1476.627356 692.723059 l
1491.353914 684.959431 l
1506.080473 676.042703 l
1520.807031 667.672217 l
1535.533589 659.853503 l
1550.260147 651.303529 l
1564.986706 643.271812 l
1579.713264 635.528132 l
1594.439822 628.1185 l
1609.16638 621.225341 l
1623.892939 614.869132 l
1638.619497 609.018971 l
1653.346055 603.608892 l
1668.072613 598.665439 l
1682.799172 594.144232 l
1697.52573 590.106365 l
1712.252288 586.622016 l
1726.978846 583.745794 l
1741.705405 581.556674 l
1756.431963 580.131935 l
1771.158521 579.577895 l
1785.885079 580.037807 l
1800.611638 581.682677 l
1815.338196 584.59249 l
1830.064754 588.316055 l
1844.791312 590.700585 l
1859.517871 587.855107 l
1874.244429 579.501078 l
1888.970987 569.474234 l
1903.697545 560.146718 l
1918.424104 552.081749 l
1933.150662 545.255916 l
1947.87722 539.558011 l
1962.603778 534.920067 l
1977.330337 531.348615 l
1992.056895 528.931223 l
2006.783453 527.809761 l
2021.510011 527.994117 l
2036.23657 528.623819 l
2050.963128 526.970504 l
2065.689686 521.326943 l
2080.416244 514.083931 l
2095.142803 507.36664 l
2109.869361 501.516305 l
2124.595919 496.429963 l
2139.322477 492.126155 l
2154.049036 487.20894 l
2183.502152 475.223977 l
2198.22871 469.747148 l
2227.681827 459.243498 l
2242.408385 454.247498 l
2257.134943 449.561186 l
2271.861502 445.158204 l
2301.314618 436.864364 l
2316.041176 432.707913 l
2330.767735 428.202304 l
2345.494293 423.225926 l
2360.220851 418.559062 l
2374.947409 414.453746 l
2404.400526 406.76929 l
2448.580201 395.509764 l
2448.580201 395.509764 l
stroke
grestore
0.800 setlinewidth
0 setlinejoin
2 setlinecap
[] 0 setdash
gsave
254.323021 181.405346 m
254.323021 1327.604393 l
stroke
grestore
gsave
2448.580201 181.405346 m
2448.580201 1327.604393 l
stroke
grestore
gsave
254.323021 181.405346 m
2448.580201 181.405346 l
stroke
grestore
gsave
254.323021 1327.604393 m
2448.580201 1327.604393 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
1771.143641 1075.25196 m
2413.580201 1075.25196 l
2420.246867 1075.25196 2423.580201 1078.585293 2423.580201 1085.25196 c
2423.580201 1292.604393 l
2423.580201 1299.27106 2420.246867 1302.604393 2413.580201 1302.604393 c
1771.143641 1302.604393 l
1764.476974 1302.604393 1761.143641 1299.27106 1761.143641 1292.604393 c
1761.143641 1085.25196 l
1761.143641 1078.585293 1764.476974 1075.25196 1771.143641 1075.25196 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
8.000 setlinewidth
1 setlinejoin
2 setlinecap
0.000 setgray
gsave
1781.143641 1265.104393 m
1831.143641 1265.104393 l
1881.143641 1265.104393 l
stroke
grestore
gsave
1921.144 1247.256 moveto
(psmarker12)
show
grestore
0 setlinecap
[8 13.2] 0 setdash
gsave
1781.143641 1194.320249 m
1831.143641 1194.320249 l
1881.143641 1194.320249 l
stroke
grestore
gsave
1921.144 1176.472 moveto
(psmarker13)
show
grestore
[29.6 12.8] 0 setdash
gsave
1781.143641 1123.536105 m
1831.143641 1123.536105 l
1881.143641 1123.536105 l
stroke
grestore
gsave
1921.144 1095.252 moveto
(psmarker14)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 10800 a
 /End PSfrag
 -600 10800 a -600 2432 a
 /Hide PSfrag
 -600
2432 a -1285 2489 a Fg(PSfrag)20 b(replacements)p -1285
2520 685 4 v -600 2523 a
 /Unhide PSfrag
 -600 2523 a -1628 3184 a
  {
 -1628
3184 a Black 0.000 0.000 0.000 TeXcolorrgb -12 x Fe(10)-880
2902 y Fc(0)p Black Black -1628 3184 a
  } 0/Place PSfrag
 -1628 3184 a -1628
3845 a
  {
 -1628 3845 a Black 0.000 0.000 0.000 TeXcolorrgb
-12 x Fe(10)-880 3563 y Fc(1)p Black Black -1628 3845
a
  } 1/Place PSfrag
 -1628 3845 a -1628 4506 a
  {
 -1628 4506 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(10)-880 4224 y Fc(2)p Black Black
-1628 4506 a
  } 2/Place PSfrag
 -1628 4506 a -1628 5167 a
  {
 -1628 5167 a Black
0.000 0.000 0.000 TeXcolorrgb -12 x Fe(10)-880 4885 y
Fc(3)p Black Black -1628 5167 a
  } 3/Place PSfrag
 -1628 5167 a -5298 5847
a
  {
 -5298 5847 a Black 0.000 0.000 0.000 TeXcolorrgb -162
x Fe(Frequenc)-11 b(y)184 b(\(Hz\))p Black Black -5298
5847 a
  } 4/Place PSfrag
 -5298 5847 a -974 6367 a
  {
 -974 6367 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(0)p Black Black -974 6367 a
  } 5/Place PSfrag
 -974
6367 a -1347 6897 a
  {
 -1347 6897 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(25)p Black Black -1347 6897 a
  } 6/Place PSfrag
 -1347
6897 a -1347 7427 a
  {
 -1347 7427 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(50)p Black Black -1347 7427 a
  } 7/Place PSfrag
 -1347
7427 a -1347 7957 a
  {
 -1347 7957 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(75)p Black Black -1347 7957 a
  } 8/Place PSfrag
 -1347
7957 a -1721 8477 a
  {
 -1721 8477 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(100)p Black Black -1721 8477 a
  } 9/Place PSfrag
 -1721
8477 a -1721 9007 a
  {
 -1721 9007 a Black 0.000 0.000 0.000
TeXcolorrgb -12 x Fe(125)p Black Black -1721 9007 a
  } 10/Place PSfrag
 -1721
9007 a -7378 9825 a
  {
 -7378 9825 a Black 0.000 0.000 0.000
TeXcolorrgb -168 x Fe(SPL)j(\(dB)g(re)f(1)19 b Fb(m)62
b Fe(P)-11 b(a)-2208 9386 y Fc(2)-1928 9657 y Fe(/Hz\))p
Black Black -7378 9825 a
  } 11/Place PSfrag
 -7378 9825 a -2930 10123 a
  {
 -2930
10123 a Black 0.000 0.000 0.000 TeXcolorrgb -6 x Fa(3D-V)-56
b(A)102 b(model)p Black Black -2930 10123 a
  } 12/Place PSfrag
 -2930 10123
a -4620 10419 a
  {
 -4620 10419 a Black 0.000 0.000 0.000
TeXcolorrgb -5 x Fa(T)-15 b(ransfer)105 b(function)e(model)p
Black Black -4620 10419 a
  } 13/Place PSfrag
 -4620 10419 a -4117 10800 a
  {

-4117 10800 a Black 0.000 0.000 0.000 TeXcolorrgb -90
x Fa(Axisymmetric)i(model)p Black Black -4117 10800 a
  } 14/Place PSfrag

-4117 10800 a 20400 10800 a
 currentpoint grestore moveto
 20400 10800 a Black Black
Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
